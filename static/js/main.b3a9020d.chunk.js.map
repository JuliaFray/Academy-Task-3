{"version":3,"sources":["Components/AllTasks/AllTasks.module.css","Components/ToDoList.module.css","Components/Task/Task.module.css","Components/Lists/Lists.module.css","Components/List/List.module.css","Components/Login/LoginForm.module.css","Components/Registration/RegForm.module.css","Redux/taskAction.js","Redux/taskReducer.js","Redux/listAction.js","Redux/listReducer.js","Redux/authAction.js","Redux/authReducer.js","Redux/reduxStore.js","Components/Header/Header.jsx","Components/InputForm/InputForm.jsx","Components/Task/Task.jsx","Components/AllTasks/AllTasks.jsx","Components/InputFormList/InputFormList.jsx","Components/List/List.jsx","Components/Lists/Lists.jsx","Components/Login/LoginForm.jsx","Components/Registration/RegForm.jsx","App.js","serviceWorker.js","index.js","Components/Header/Header.module.css","Components/InputForm/InputForm.module.css","Components/InputFormList/InputFormList.module.css"],"names":["module","exports","setTasks","tasks","type","initialState","SET_TASK","taskReducer","state","action","Object","assign","task","setLists","lists","SET_LIST","listReducer","setUserData","login","isAuth","userUid","payload","setIsAuth","loginTC","password","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","then","user","currentUser","email","localStorage","setItem","uid","checkCurrentUser","SET_USER_DATA","SET_IS_AUTH","authReducer","middlewares","thunk","withExtraArgument","reducers","combineReducers","taskPage","listPage","authPage","composeEnhancers","window","__INITIAL_STATE__","compose","store","createStore","applyMiddleware","Header","useSelector","localIsAuth","getItem","useDispatch","onLogOutClick","signOut","className","css","header","headerText","logoutBlock","logout","logoutText","logoutBtn","onClick","showErrors","yup","shape","taskText","required","max","min","InputForm","props","useForm","resolver","yupResolver","register","handleSubmit","setValue","errors","form","onSubmit","data","text","name","ref","placeholder","isNow","for","id","message","addBtn","value","newText","Task","defaultValues","useState","editMode","setEditMode","taskName","newTaskName","setNewTaskName","isDone","style","high","low","done","onBlur","path","location","href","listId","split","length","updates","database","child","update","updateTasksTC","newName","onChange","target","autoFocus","checkBtn","deleteTask","deleteBtn","checkTask","changeTask","AllTasks","useDeleteTask","remove","deleteTasksTC","useCheckTask","checkTasksTC","useEffect","on","elem","response","val","getTasksTC","history","useHistory","push","tasksArray","values","newTask","newKey","key","addTasksTC","allTasksWrapper","allTasks","filter","headerLink","to","inputForm","map","t","List","list","taskListName","updateListsTC","link","btns","updateBtn","deleteList","Lists","useDeleteList","deleteListsTC","getListsTC","listsArray","addListsTC","InputFormList","l","LoginForm","rememberme","formWrapper","btn","linkWrapper","llogin","createUserWithEmailAndPassword","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","ToDoListWithRouter","withRouter","todo","render","exact","RegForm","App","config","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,SAAW,2BAA2B,OAAS,yBAAyB,WAAa,6BAA6B,WAAa,6BAA6B,UAAY,4BAA4B,MAAQ,0B,oBCAlRD,EAAOC,QAAU,CAAC,KAAO,yB,yDCAzBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,UAAY,wBAAwB,SAAW,uBAAuB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,KAAO,mBAAmB,QAAU,wB,mBCA9PD,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,SAAW,wBAAwB,OAAS,sBAAsB,WAAa,0BAA0B,WAAa,0BAA0B,UAAY,yBAAyB,MAAQ,uB,mBCAhQD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,wBAAwB,QAAU,wB,mBCAlLD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,+BAA+B,KAAO,wBAAwB,SAAW,4BAA4B,IAAM,uBAAuB,YAAc,+BAA+B,KAAO,0B,mBCArPD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,YAAc,6BAA6B,KAAO,sBAAsB,SAAW,0BAA0B,IAAM,qBAAqB,YAAc,6BAA6B,KAAO,wB,kNCG5NC,EAAW,SAACC,GAAD,MAAY,CAAEC,KAHd,WAG8BD,UCAtD,IAAME,EAAe,CACjBF,MAAOD,EAASI,UAiBLC,EAbK,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOL,MACX,IDVgB,WCWZ,OAAOM,OAAOC,OAAO,GAAIH,EAAlBE,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACAF,GADA,IAEHL,MAAOM,EAAON,MAAMS,QAG5B,QACI,OAAOJ,ICZNK,EAAW,SAACC,GAAD,MAAY,CAAEV,KAHd,WAG8BU,UCFtD,IAAMT,EAAe,CACjBS,MAAOD,EAASE,UAkBLC,EAbK,WAAmC,IAAlCR,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOL,MACX,IDTgB,WCUZ,OAAOM,OAAOC,OAAO,GAAIH,EAAlBE,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACAF,GADA,IAEHM,MAAOL,EAAOK,SAGtB,QACI,OAAON,ICdNS,EAAc,SAACC,EAAOC,EAAQC,GAAhB,MAA6B,CACpDhB,KALyB,gBAMzBiB,QAAS,CAAEH,QAAOC,SAAQC,aAGjBE,EAAY,SAACH,GAAD,MAAa,CAAEf,KARb,cAQgCe,WAGpD,SAASI,EAAQL,EAAOM,GAC3B,OAAO,SAACC,EAAUC,EAAUC,GACxB,OAAOA,IACFC,OACAC,2BAA2BX,EAAOM,GAClCM,MAAK,WACFL,EAKhB,SAA0BP,GACtB,OAAO,SAACO,EAAUC,EAAUC,GACxB,IAAII,EAAOJ,IACNC,OACAI,YACDD,GACIA,EAAKE,QAAUf,IACfgB,aAAaC,QAAQ,MAAOJ,EAAKK,KACjCF,aAAaC,QAAQ,SAAU,QAC/BD,aAAaC,QAAQ,QAASjB,GAE9BO,EAASR,EAAYC,GAAO,EAAMa,EAAKK,MACvCX,EAASH,GAAU,MAjBVe,CAAiBnB,QCf1C,I,UAAIb,EAAe,CACfgB,QAASJ,EAAYqB,cACrBpB,MAAO,GACPC,OAAQF,EAAYsB,YACpBnB,QAAS,IAwBEoB,EApBK,WAAmC,IAAlChC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOL,MACX,IDbqB,gBCejB,OAAOM,OAAOC,OAAO,GAAIH,EAAlBE,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACAF,GACAC,EAAOY,UAGlB,IDnBmB,cCoBf,OAAOX,OAAOC,OAAO,GAAIH,EAAlBE,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACAF,GADA,IAEHW,OAASV,EAAOU,UAGxB,QACI,OAAOX,ICrBbiC,EAAc,C,OAChBC,EAAMC,kBAAkBhB,gBAGxBiB,EAAWC,YAAgB,CAC3BC,SAAUvC,EACVwC,SAAU/B,EACVgC,SAAUR,IAGRS,EAAmBC,QAAUA,OAAOC,mBAAqBC,IAGhDC,EAFDC,YAAYV,EAAUK,EAAiBM,IAAe,WAAf,EAAmBd,K,iBCuBzDe,EApCA,WAEIC,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS7B,UAAnD,IACMuC,EAAcxB,aAAayB,QAAQ,UACnCzC,EAAQgB,aAAayB,QAAQ,SAE7BlC,EAAWmC,cAEXC,EAAgB,WAElBpC,GH4BG,SAACA,EAAUC,EAAUC,GAIxB,OAHAO,aAAaC,QAAQ,MAAO,IAC5BD,aAAaC,QAAQ,SAAU,SAC/BD,aAAaC,QAAQ,QAAS,IACvBR,IACFC,OACAkC,UACAhC,MAAK,WACFL,EAASR,EAAY,IAAI,EAAO,KAChCQ,EAASH,GAAU,WGlC/B,OACI,yBAAKyC,UAAWC,IAAIC,QAChB,yBAAKF,UAAWC,IAAIE,YAChB,yCAEJ,yBAAKH,UAAWC,IAAIG,aACE,SAAhBT,EACI,yBAAKK,UAAWC,IAAII,QAClB,uBAAGL,UAAWC,IAAIK,YACbnD,GAEL,6BACI,4BAAQ6C,UAAWC,IAAIM,UAAWC,QAAS,kBAAMV,MAAjD,YAIN,+B,+CC5BhBW,EAAaC,MAAaC,OAAb,GACfC,SAAUF,MAAaG,YADR,yBAELH,MAAaI,IAAI,OAFZ,yBAGLJ,MAAaK,IAAI,MAHZ,IA0CJC,EApCG,SAACC,GAAW,IAAD,MAC4BC,kBAAQ,CACzDC,SAAUC,sBAAYX,KADlBY,EADiB,EACjBA,SAAUC,EADO,EACPA,aAAcC,EADP,EACOA,SAAUC,EADjB,EACiBA,OAe1C,OACI,0BAAMxB,UAAWC,IAAIwB,KAAMC,SAAUJ,GAZxB,SAACK,GACdV,EAAMS,SAASC,GAOfJ,EAAS,WAAY,QAMjB,2BAAOvB,UAAWC,IAAI2B,KAAMC,KAAK,WAC7BC,IAAKT,EAAUU,YAAa,oBAChC,yBAAK/B,UAAaC,IAAI+B,OAClB,2BAAOC,IAAI,SAAX,0DACA,2BAAOJ,KAAK,QAAQC,IAAKT,EAAUa,GAAG,QAAQ7F,KAAK,eAGtD,UAAAmF,EAAOZ,gBAAP,eAAiBuB,SACZ,qCAAIX,EAAOZ,gBAAX,aAAI,EAAiBuB,SACrB,2BAAOnC,UAAWC,IAAImC,OAAQC,MAAM,MAAMhG,KAAK,a,yBChC3DoE,EAAaC,MAAaC,OAAb,GACf2B,QAAS5B,MAAaG,YADP,wBAENH,MAAaI,IAAI,OAFX,wBAGNJ,MAAaK,IAAI,MAHX,IA0FJwB,EApFF,SAACtB,GAEV,IAAIpE,EAAOoE,EAAMpE,KAFG,EAIuBqE,kBAAQ,CAC/CC,SAAUC,sBAAYX,GACtB+B,cAAe,CACXF,QAASzF,EAAK+D,YAHdS,EAJY,EAIZA,SAAUC,EAJE,EAIFA,aAJE,KAIYE,OAOAiB,oBAAS,IAXrB,mBAWbC,EAXa,KAWHC,EAXG,OAYkBF,mBAASxB,EAAM2B,UAZjC,mBAYbC,EAZa,KAYAC,EAZA,KAcdpF,EAAWmC,cAiCjB,GAAoB,UAAhBhD,EAAKkG,QACL,GAAIlG,EAAKmF,MACL,IAAIgB,EAAQ/C,IAAIgD,UACb,IAAKpG,EAAKmF,MACTgB,EAAQ/C,IAAIiD,SAGhBF,EAAQ/C,IAAIkD,KAWpB,OACI,6BACMT,EASI,0BAAMU,OAAQ9B,GAhDb,SAACK,GACZ,IAAI9E,EAAOoE,EAAMpE,KAEbwG,EAAOlE,OAAOmE,SAASC,KAEvBC,GADJH,EAAOA,EAAKI,MAAM,MACAJ,EAAKK,OAAS,GAK5B7G,EAAK+D,SAHJiC,GACelB,EAAKW,QAKzB5E,ETmCD,SAAuBW,EAAKmF,EAAQ3G,GACvC,OAAO,SAACa,EAAUC,EAAUC,GACnBS,IACDA,EAAMF,aAAayB,QAAQ,QAE/B,IACI+D,EAAU,GAGd,OAFAA,EAFS9G,EAAKqF,IAEArF,EAEPe,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNA,MAAML,GACNK,MAAM,QACNC,OAAOH,ISlDHI,CAAc9C,EAAM5C,IAAKmF,EAAQ3G,QAoC9B,2BAAOiF,IAAKT,EAAUQ,KAAK,UAAU7B,UAAWC,IAAI+D,QAASC,SArDpD,SAAC,GAA2B,IAAf5B,EAAc,EAAxB6B,OAAU7B,MAClCS,EAAeT,IAoDsF8B,WAAW,EAAM9B,MAAOQ,EAAaO,OAzDnH,WACvBT,GAAY,OA+CF,yBAAK3C,UAAS,UAAKC,IAAIpD,KAAT,cAAmBmG,IAC/B,yBAAKhD,UAAWC,IAAI2B,MAAO/E,EAAK+D,UAChC,4BAAQZ,UAAWC,IAAImE,SAAU5D,QAAS,WArDtDmC,GAAY,KAqDA,UACiB,SAAhB9F,EAAKkG,OACA,4BAAQvC,QAAS,kBAAMS,EAAMoD,WAAWxH,EAAKqF,KAAKlC,UAAWC,IAAIqE,WAAjE,UACA,4BAAQ9D,QAAS,kBAhBvC,SAAoB3D,GAChB,IAAIwG,EAAOlE,OAAOmE,SAASC,KAEvBC,GADJH,EAAOA,EAAKI,MAAM,MACAJ,EAAKK,OAAS,GAChC7G,EAAKkG,OAAS,OACd9B,EAAMsD,UAAUf,EAAQ3G,GAWiB2H,CAAWvD,EAAMpE,OAAOmD,UAAWC,IAAImE,UAA9D,iB,iBCuBXK,EApGE,WAEb,IAAMrI,EAAQsD,aAAY,SAAAjD,GAAK,OAAIA,EAAMsC,SAAS3C,SAE5CiC,GADSqB,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS7B,UACvCsC,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS5B,YAC1CsC,EAAcxB,aAAayB,QAAQ,UAEnClC,EAAWmC,cASjB,SAAS6E,EAAcxC,GACnB,IAAImB,EAAOlE,OAAOmE,SAASC,KAEvBC,GADJH,EAAOA,EAAKI,MAAM,MACAJ,EAAKK,OAAS,GAChChG,EVAD,SAAuBW,EAAKmF,EAAQtB,GACvC,OAAO,SAACxE,EAAUC,EAAUC,GAKxB,OAJKS,IACDA,EAAMF,aAAayB,QAAQ,QAGxBhC,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNA,MAAML,GACNK,MAAM,QACNA,MAAM3B,GACNyC,UUbIC,CAAcvG,EAAKmF,EAAQtB,IAGxC,SAAS2C,EAAa3C,EAAIrF,GACtBa,EVaD,SAAsBW,EAAKmF,EAAQ3G,GACtC,OAAO,SAACa,EAAUC,EAAUC,GACnBS,IACDA,EAAMF,aAAayB,QAAQ,QAE/B,IAAI+D,EAAU,GAId,OAFAA,EADS9G,EAAKqF,IACArF,EAEPe,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNA,MAAML,GACNK,MAAM,QACNC,OAAOH,IU5BHmB,CAAazG,EAAK6D,EAAIrF,IAfnCkI,qBAAU,WACN,IAAI1B,EAAOlE,OAAOmE,SAASC,KAEvBC,GADJH,EAAOA,EAAKI,MAAM,MACAJ,EAAKK,OAAS,GACjChG,EVhBA,SAAoBW,EAAKmF,GAC5B,OAAO,SAAC9F,EAAUC,EAAUC,GASxB,OAPKS,IACDA,EAAMF,aAAayB,QAAQ,QAMxBhC,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNA,MAAML,GACNwB,GAAG,SAAS,SAACC,GACV,IAAIC,EAAWD,EAAKE,MAEpBzH,EAASvB,EADG+I,QUDXE,CAAW/G,EAAKmF,MAC1B,IAoBH,IAAM6B,EAAUC,cAGI,UAAhB3F,GACA0F,EAAQE,KAAK,KAGjB,IAAIC,EAAa,GAEbA,EADApJ,EACaO,OAAO8I,OAAOrJ,GAEd,GAGjB,IAAMsF,EAAW,SAACC,GACd,IAAI+D,EAAU,CACV9E,SAAUe,EAAKf,SACfoB,MAAOL,EAAKK,MACZe,OAAQ,SAGRM,EAAOlE,OAAOmE,SAASC,KAEvBC,GADJH,EAAOA,EAAKI,MAAM,MACAJ,EAAKK,OAAS,GAChChG,EVFD,SAAoBW,EAAKmF,EAAQ3G,GACpC,OAAO,SAACa,EAAUC,EAAUC,GACnBS,IACDA,EAAMF,aAAayB,QAAQ,QAE/B,IAAI+F,EAAS/H,IACRgG,WACA9B,IAAI,QACJyD,OACAK,IAEDjC,EAAU,GAGd,OAFA9G,EAAKqF,GAAKyD,EACVhC,EAAQgC,GAAU9I,EACXe,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNA,MAAML,GACNK,MAAM,QACNC,OAAOH,IUlBHkC,CAAWxH,EAAKmF,EAAQkC,KAIrC,OACI,yBAAK1F,UAAWC,IAAI6F,iBACfN,EAAW9B,OAAS,EACf,yBAAK1D,UAAWC,IAAI8F,UAClB,yBAAK/F,UAAWC,IAAIC,QACpB,wBAAIF,UAAWC,IAAIE,YAAnB,iBAA8CqF,EAAWQ,QAAO,SAAAnJ,GAAI,MAAoB,UAAhBA,EAAKkG,UAAoBW,OACrF,kBAAC,IAAD,CAAS1D,UAAWC,IAAIgG,WAAYC,GAAI,aAAxC,QADZ,KAGI,yBAAKlG,UAAWC,IAAIkG,WAChB,kBAAC,EAAD,CAEAzE,SAAYA,MAKpB,yBAAK1B,UAAWC,IAAI7D,OACfoJ,EAAWY,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMxJ,KAAMwJ,EAAGhC,WAAYK,EAAeH,UAAWM,EAAcxG,IAAOA,SAGrG,yBAAK2B,UAAWC,IAAI8F,UAClB,yBAAK/F,UAAWC,IAAIC,QAChB,wBAAIF,UAAWC,IAAIE,YAAnB,kBAA8C,kBAAC,IAAD,CAASH,UAAWC,IAAIgG,WAAYC,GAAI,aAAxC,WAE9C,yBAAKlG,UAAWC,IAAIkG,WAChB,kBAAC,EAAD,CAEAzE,SAAYA,S,oBC7FlCjB,GAAaC,MAAaC,OAAb,GACfC,SAAUF,MAAaG,YADR,yBAELH,MAAaI,IAAI,OAFZ,yBAGLJ,MAAaK,IAAI,MAHZ,IAwCJC,GAlCG,SAACC,GAAW,IAAD,MAC4BC,kBAAQ,CACzDC,SAAUC,sBAAYX,MADlBY,EADiB,EACjBA,SAAUC,EADO,EACPA,aAAcC,EADP,EACOA,SAAUC,EADjB,EACiBA,OAmB1C,OACI,0BAAMxB,UAAWC,KAAIwB,KAAMC,SAAUJ,GARxB,SAACK,GACdV,EAAMS,SAASC,GACfJ,EAAS,WAAY,QAQjB,2BAAOvB,UAAWC,KAAI2B,KAAMC,KAAK,WAC7BC,IAAKT,EAAUU,YAAa,qBAC/B,UAAAP,EAAOZ,gBAAP,eAAiBuB,SACZ,qCAAIX,EAAOZ,gBAAX,aAAI,EAAiBuB,SACrB,2BAAOnC,UAAWC,KAAImC,OAAQC,MAAM,MAAMhG,KAAK,a,oBC9B3DoE,GAAaC,MAAaC,OAAb,GACf2B,QAAS5B,MAAaG,YADP,wBAENH,MAAaI,IAAI,OAFX,wBAGNJ,MAAaK,IAAI,MAHX,IAiEJuF,GA3DF,SAACrF,GAAW,IAAD,EAEuBC,kBAAQ,CAC/CC,SAAUC,sBAAYX,IACtB+B,cAAe,CACXF,QAASrB,EAAMsF,KAAKC,gBAHpBnF,EAFY,EAEZA,SAAUC,EAFE,EAEFA,aAOZsB,GATc,EAEYpB,OAOf9B,aAAY,SAAAjD,GAAK,OAAIA,EAAMuC,SAASjC,MAAMyJ,iBATvC,EAUY/D,oBAAS,GAVrB,mBAUbC,EAVa,KAUHC,EAVG,OAWkBF,mBAASG,GAX3B,mBAWbC,EAXa,KAWAC,EAXA,KAadpF,EAAWmC,cA0BjB,OACI,0BAAMuD,OAAU9B,GAzBL,SAACK,GACZ,IAAI4E,EAAOtF,EAAMsF,KAKbA,EAAKC,aAHJ3D,GACmBlB,EAAKW,QAI7B5E,EVID,SAAuBW,EAAKkI,GAC/B,OAAO,SAAC7I,EAAUC,EAAUC,GACnBS,IACDA,EAAMF,aAAayB,QAAQ,QAE/B,IACI+D,EAAU,GAEd,OADAA,EAFS4C,EAAKrE,IAEAqE,EACP3I,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNC,OAAOH,IUhBH8C,CAAcxF,EAAM5C,IAAKkI,QAkB5B7D,EAWE,2BAAOZ,IAAKT,EAAUQ,KAAK,UAAU7B,UAAWC,KAAI+D,QAASC,SAlBhD,SAAC,GAA2B,IAAf5B,EAAc,EAAxB6B,OAAU7B,MAClCS,EAAeT,IAiBkF8B,WAAW,EAAM9B,MAAOQ,EAAaO,OAtB/G,WACvBT,GAAY,IAqBsJtG,KAAK,SAV7J,yBAAK2D,UAAS,UAAKC,KAAIsG,OACrB,kBAAC,IAAD,CAASvG,UAAS,UAAKC,KAAIyG,MAAQR,GAAE,oBAAejF,EAAMsF,KAAKrE,KAC3D,yBAAKlC,UAAWC,KAAI2B,MAAOX,EAAMsF,KAAKC,eAE1C,yBAAKxG,UAAWC,KAAI0G,MAChB,4BAAQ3G,UAAWC,KAAI2G,UAAWpG,QAAS,kBAAuBS,EAAMsF,KAAKC,kBApB7F7D,GAAY,KAoBI,UACA,4BAAQ3C,UAAWC,KAAIqE,UAAW9D,QAAS,kBAAMS,EAAM4F,WAAW5F,EAAMsF,KAAKrE,MAA7E,c,oBCkCT4E,GAxFD,WAEV,IAAM/J,EAAQ2C,aAAY,SAAAjD,GAAK,OAAIA,EAAMuC,SAASjC,SAC5CsB,EAAMF,aAAayB,QAAQ,OAC3BD,EAAcxB,aAAayB,QAAQ,UACnCzC,EAAQuC,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS9B,SAK5CkI,GAJS3F,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS7B,UAInCkI,eACV5H,EAAWmC,cAUjB,SAASkH,EAAc7E,GACnBxE,EXHD,SAAuBW,EAAK6D,GAC/B,OAAO,SAACxE,EAAUC,EAAUC,GAIxB,OAHKS,IACDA,EAAMF,aAAayB,QAAQ,QAExBhC,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNA,MAAM3B,GACNyC,UWPIqC,CAAc3I,EAAK6D,IAThC6C,qBAAU,WACNrH,EXdD,SAAoBW,GACvB,OAAO,SAACX,EAAUC,EAAUC,GAOxB,OAHKS,IACDA,EAAMF,aAAayB,QAAQ,QAExBhC,IACFgG,WACA9B,IAAIzD,GACJwF,MAAM,YACNmB,GAAG,SAAS,SAACC,GACV,IAAIC,EAAWD,EAAKE,MACpBzH,EAASZ,EAASoI,QWAjB+B,CAAW5I,MACrB,IAUH0G,qBAAU,WACc,UAAhBpF,GACA0F,EAAQE,KAAK,OAElB,CAACpI,IAEgB,UAAhBwC,GACA0F,EAAQE,KAAK,KAGjB,IAAI2B,EAAa,GAEbA,EADAnK,EACaJ,OAAO8I,OAAO1I,GAEd,GAGjB,IAAM2E,EAAW,SAACC,GACd,IAAI+D,EAAU,CACVc,aAAc7E,EAAKf,UAGvBlD,EXED,SAAoBW,EAAKkI,GAC5B,OAAO,SAAC7I,EAAUC,EAAUC,GACnBS,IACDA,EAAMF,aAAayB,QAAQ,QAE/BhC,IACKgG,WACA9B,IAAIzD,GACJwF,MAAM,YACX,IAAI8B,EAAS/H,IACRgG,WACA9B,IAAIzD,GACJwF,MAAM,YACN0B,OACAK,IACDjC,EAAU,GAGd,OAFA4C,EAAKrE,GAAKyD,EACVhC,EAAQgC,GAAUY,EACX3I,IACFkE,IAAIzD,GACJwF,MAAM,YACNC,OAAOH,IWvBHwD,CAAW9I,EAAKqH,KAI7B,OACI,yBAAK1F,UAAWC,KAAI6F,iBAEZoB,EAAWxD,OAAS,EACd,yBAAK1D,UAAWC,KAAI8F,UAClB,yBAAK/F,UAAWC,KAAIC,QAChB,wBAAIF,UAAWC,KAAIE,YAAnB,aACA,yBAAKH,UAAWC,KAAIkG,WAChB,kBAACiB,GAAD,CAEA1F,SAAYA,MAKpB,yBAAK1B,UAAWC,KAAI7D,OACf8K,EAAWxD,OAAS,EACfwD,EAAWd,KAAI,SAAAiB,GAAC,OAAI,kBAAC,GAAD,CAAMd,KAAMc,EAAGR,WAAYE,EAAgB1I,IAAKA,OACpE,kBAAC,GAAD,CAAMkI,KAAMW,EAAW,GAAIL,WAAYE,EAAe1I,IAAKA,MAIvE,yBAAK2B,UAAWC,KAAI8F,UAClB,yBAAK/F,UAAWC,KAAIC,QAChB,4CACA,yBAAKF,UAAWC,KAAIkG,WAChB,kBAACiB,GAAD,CAEA1F,SAAYA,S,oBC9EtCjB,GAAaC,MAAaC,OAAb,GACfxD,MAAOuD,MAAaG,WACpBpD,SAAUiD,MAAaG,YAFR,sBAGRH,MAAaxC,SAHL,yBAILwC,MAAaK,IAAI,MAJZ,IAiEJuG,GA1DG,WAEC5H,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS7B,UAF9B,IAAD,IAKduC,EAAcxB,aAAayB,QAAQ,UAInClC,EAAWmC,cATG,EAWiCqB,kBAAQ,CACzDC,SAAUC,sBAAYX,MADlBY,EAXY,EAWZA,SAAUC,EAXE,EAWFA,aAAcC,EAXZ,EAWYA,SAAUC,EAXtB,EAWsBA,OAe1C,MAAoB,SAAhB7B,EACO,kBAAC,IAAD,CAAUuG,GAAE,cAInB,0BAAMlG,UAAWC,KAAIwB,KAAMC,SAAUJ,GAdxB,SAACK,GACdjE,EAASF,EAAQmE,EAAKxE,MAAOwE,EAAKlE,SAAUkE,EAAK4F,aACjDhG,EAAS,QAAS,IAClBA,EAAS,WAAY,QAYjB,yBAAKvB,UAAWC,KAAIuH,aAChB,qCACA,2BAAO3F,KAAK,QAAQC,IAAKT,EAAUrB,UAAWC,KAAI2B,KAAMvF,KAAK,OAAO0F,YAAY,gBAChF,qCAAIP,EAAOrE,aAAX,aAAI,EAAcgF,SAClB,2BAAON,KAAK,WAAWC,IAAKT,EAAUrB,UAAWC,KAAI2B,KAAMvF,KAAK,WAAW0F,YAAY,mBACvF,qCAAIP,EAAO/D,gBAAX,aAAI,EAAiB0E,SAQrB,2BAAOnC,UAAWC,KAAIwH,IAAKpL,KAAK,SAASgG,MAAM,UAE/C,yBAAKrC,UAAWC,KAAIyH,aACpB,kBAAC,IAAD,CAAS1H,UAAWC,KAAIyG,KAAMR,GAAI,iBAAlC,uB,oBCvDVzF,GAAaC,MAAaC,MAAb,aACfgH,OAAQjH,MAAaG,WACrBpD,SAAUiD,MAAaG,WACvB1D,MAAOuD,MAAaxC,SAHL,WAILwC,MAAaK,IAAI,OA2ChBuG,GAxCG,WAAO,IAAD,IAEdlK,EAASsC,aAAY,SAAAjD,GAAK,OAAIA,EAAMwC,SAAS7B,UAE7CM,EAAWmC,cAJG,EAMiCqB,kBAAQ,CACzDC,SAAUC,sBAAYX,MADlBY,EANY,EAMZA,SAAUC,EANE,EAMFA,aAAcC,EANZ,EAMYA,SAAUC,EANtB,EAMsBA,OAU1C,OAAIpE,EACO,kBAAC,IAAD,CAAU8I,GAAI,cAIrB,0BAAMlG,UAAWC,KAAIwB,KAAMC,SAAUJ,GAXxB,SAACK,GX+Bf,IAAexE,EAAOM,EW9BrBC,GX8BcP,EW9BCwE,EAAKxE,MX8BCM,EW9BMkE,EAAKlE,SX+B7B,SAACC,EAAUC,EAAUC,GACxB,OAAOA,IACFC,OACA+J,+BAA+BzK,EAAOM,GACtCM,MAAK,WACFL,EAASF,EAAQL,EAAOM,UWnChC8D,EAAS,QAAS,IAClBA,EAAS,WAAY,QASjB,yBAAKvB,UAAWC,KAAIuH,aAChB,8CACA,2BAAO3F,KAAK,QAAQC,IAAKT,EAAUrB,UAAWC,KAAI2B,KAAMvF,KAAK,OAAO0F,YAAY,gBAChF,qCAAIP,EAAOrE,aAAX,aAAI,EAAcgF,SAClB,2BAAON,KAAK,WAAWC,IAAKT,EAAUrB,UAAWC,KAAI2B,KAAMvF,KAAK,WAAW0F,YAAY,mBACvF,qCAAIP,EAAO/D,gBAAX,aAAI,EAAiB0E,SAErB,2BAAOnC,UAAWC,KAAIwH,IAAKpL,KAAK,SAASgG,MAAM,mBAE/C,yBAAKrC,UAAWC,KAAIyH,aAChB,kBAAC,IAAD,CAAS1H,UAAWC,KAAIyG,KAAMR,GAAI,KAAlC,c,qBCjCd2B,GAAiB,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,6CAGTC,IAASC,cAAcT,IAEvB,IAYMU,GAAqBC,aAZV,WACf,OACE,yBAAKxI,UAAaC,KAAIwI,MACpB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOpF,KAAK,oBAAoBqF,OAAQ,kBAAM,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAOC,OAAK,EAACtF,KAAK,YAAYqF,OAAQ,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOC,OAAK,EAACtF,KAAK,IAAIqF,OAAQ,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOrF,KAAK,gBAAgBqF,OAAQ,kBAAM,kBAACE,GAAD,aAuBjCC,GAhBH,WAEV,OACE,kBAAC,IAAD,CAAUvJ,MAAOA,GACf,kBAAC,6BAAD,CAA4B+I,SAAUA,IAAUS,OAAQjB,GAAgBnK,SAAU4B,EAAM5B,UACtF,yBAAKsC,UAAU,OACb,kBAAC,IAAD,KACE,kBAACuI,GAAD,W,OCrCQQ,QACW,cAA7B5J,OAAOmE,SAAS0F,UAEe,UAA7B7J,OAAOmE,SAAS0F,UAEhB7J,OAAOmE,SAAS0F,SAASC,MACvB,2DCZNC,IAASR,OACP,kBAAC,IAAMS,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzL,MAAK,SAAA0L,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMzH,a,mBExI5BlG,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,4B,mBCAtID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,2B,mBCA3HD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,OAAS,iC","file":"static/js/main.b3a9020d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"AllTasks_allTasksWrapper__1UheL\",\"allTasks\":\"AllTasks_allTasks__3jm6-\",\"header\":\"AllTasks_header__YzbYR\",\"headerText\":\"AllTasks_headerText__3foYd\",\"headerLink\":\"AllTasks_headerLink__2oSo_\",\"inputForm\":\"AllTasks_inputForm__1y5iu\",\"tasks\":\"AllTasks_tasks__1glog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDoList_todo__1yxY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__2i8xg\",\"state\":\"Task_state__3ZMHM\",\"deleteBtn\":\"Task_deleteBtn__17owL\",\"checkBtn\":\"Task_checkBtn__2ZdP8\",\"text\":\"Task_text__Xthyq\",\"high\":\"Task_high___AUQL\",\"low\":\"Task_low__29NL3\",\"done\":\"Task_done__1oz61\",\"newName\":\"Task_newName__1piZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"Lists_allTasksWrapper__2REvb\",\"allTasks\":\"Lists_allTasks__3M8dN\",\"header\":\"Lists_header__1VL64\",\"headerText\":\"Lists_headerText__3WRBx\",\"headerLink\":\"Lists_headerLink__1qIC1\",\"inputForm\":\"Lists_inputForm__2SpqJ\",\"tasks\":\"Lists_tasks__2lp69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3-ERM\",\"link\":\"List_link__YbwRo\",\"btns\":\"List_btns__1cdxj\",\"updateBtn\":\"List_updateBtn__8W_Cj\",\"deleteBtn\":\"List_deleteBtn__2zZKX\",\"newName\":\"List_newName__19D8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__IPpdV\",\"formWrapper\":\"LoginForm_formWrapper__1cpaO\",\"text\":\"LoginForm_text__3Brut\",\"checkbox\":\"LoginForm_checkbox__1mSLW\",\"btn\":\"LoginForm_btn__IM4EY\",\"linkWrapper\":\"LoginForm_linkWrapper__hxDC4\",\"link\":\"LoginForm_link__ZZRpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegForm_form__3CT8P\",\"formWrapper\":\"RegForm_formWrapper__1yt4d\",\"text\":\"RegForm_text__2OYST\",\"checkbox\":\"RegForm_checkbox__aFTbp\",\"btn\":\"RegForm_btn__39lHG\",\"linkWrapper\":\"RegForm_linkWrapper__2iD1h\",\"link\":\"RegForm_link__3uK-D\"};","// consts\r\nexport const SET_TASK = 'SET-TASK';\r\n\r\n// action creators\r\nexport const setTasks = (tasks) => ({ type: SET_TASK, tasks });\r\n\r\n// thunk creators\r\nexport function getTasksTC(uid, listId) {\r\n    return (dispatch, getState, getFirebase) => {\r\n\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid')\r\n        }\r\n\r\n        // console.log(uid)\r\n        // console.log(listId)\r\n\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .on('value', (elem) => {\r\n                let response = elem.val();\r\n                let tasks = response\r\n                dispatch(setTasks(tasks))\r\n            })\r\n    }\r\n};\r\n\r\nexport function deleteTasksTC(uid, listId, id) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        debugger\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .child(id)\r\n            .remove()\r\n    }\r\n};\r\n\r\nexport function checkTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        var updates = {};\r\n        let id = task.id\r\n        updates[id] = task;\r\n        debugger\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};\r\n\r\nexport function addTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        var newKey = getFirebase()\r\n            .database()\r\n            .ref('task')\r\n            .push()\r\n            .key;\r\n\r\n        var updates = {};\r\n        task.id = newKey;\r\n        updates[newKey] = task;\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};\r\n\r\nexport function updateTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        let id = task.id;\r\n        var updates = {};\r\n        updates[id] = task\r\n        debugger\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};","//action\r\nimport { SET_TASK, setTasks } from './taskAction'\r\n\r\n// initial state\r\nconst initialState = {\r\n    tasks: setTasks.SET_TASK\r\n};\r\n\r\n// reducer\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASK:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                tasks: action.tasks.task\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default taskReducer;","import { getFirebase } from \"react-redux-firebase\";\r\n\r\n// consts\r\nexport const SET_LIST = 'SET-LIST';\r\n\r\n// action creators\r\nexport const setLists = (lists) => ({ type: SET_LIST, lists });\r\n\r\n// thunk creators\r\nexport function getListsTC(uid) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        // console.log(uid)\r\n        // console.log(localStorage.getItem('uid'))\r\n\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .on('value', (elem) => {\r\n                let response = elem.val();\r\n                dispatch(setLists(response))\r\n            })\r\n    }\r\n};\r\n\r\nexport function deleteListsTC(uid, id) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(id)\r\n            .remove()\r\n    }\r\n};\r\n\r\nexport function updateListsTC(uid, list) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        let id = list.id;\r\n        var updates = {};\r\n        updates[id] = list\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .update(updates);\r\n    }\r\n};\r\n\r\nexport function addListsTC(uid, list) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList');\r\n        var newKey = getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .push()\r\n            .key;\r\n        var updates = {};\r\n        list.id = newKey;\r\n        updates[newKey] = list;\r\n        return getFirebase()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .update(updates);\r\n    }\r\n}","// action\r\nimport { SET_LIST, setLists } from './listAction'\r\n\r\n// initial state\r\nconst initialState = {\r\n    lists: setLists.SET_LIST\r\n};\r\n\r\n\r\n// reducer\r\nconst listReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LIST:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                lists: action.lists\r\n            })\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listReducer;\r\n","//consts\r\nexport const SET_USER_DATA = 'SET-USER-DATA';\r\nexport const SET_IS_AUTH = 'SET-IS-AUTH';\r\n\r\n//action creators\r\nexport const setUserData = (login, isAuth, userUid) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { login, isAuth, userUid }\r\n});\r\n\r\nexport const setIsAuth = (isAuth) => ({ type: SET_IS_AUTH, isAuth })\r\n\r\n//thunk creators\r\nexport function loginTC(login, password) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .signInWithEmailAndPassword(login, password)\r\n            .then(() => {\r\n                dispatch(checkCurrentUser(login))\r\n            })\r\n    }\r\n};\r\n\r\nfunction checkCurrentUser(login) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        var user = getFirebase()\r\n            .auth()\r\n            .currentUser;\r\n        if (user) {\r\n            if (user.email === login) {\r\n                localStorage.setItem('uid', user.uid);\r\n                localStorage.setItem('isAuth', 'true');\r\n                localStorage.setItem('login', login)\r\n                // console.log(localStorage.getItem('uid'));\r\n                dispatch(setUserData(login, true, user.uid));\r\n                dispatch(setIsAuth(true))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function logoutTC() {\r\n    return (dispatch, getState, getFirebase) => {\r\n        localStorage.setItem('uid', '');\r\n        localStorage.setItem('isAuth', 'false');\r\n        localStorage.setItem('login', '')\r\n        return getFirebase()\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch(setUserData('', false, ''));\r\n                dispatch(setIsAuth(false))\r\n                // localStorage.clear()\r\n            })\r\n    }\r\n}\r\n\r\nexport function regTC(login, password) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .createUserWithEmailAndPassword(login, password)\r\n            .then(() => {\r\n                dispatch(loginTC(login, password))\r\n            })\r\n    }\r\n}","//action\r\nimport { SET_IS_AUTH, SET_USER_DATA, setUserData } from './authAction';\r\n\r\n//initial state\r\nlet initialState = {\r\n    payload: setUserData.SET_USER_DATA,\r\n    login: '',\r\n    isAuth: setUserData.SET_IS_AUTH,\r\n    userUid: ''\r\n};\r\n\r\n//reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            // debugger\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n\r\n        case SET_IS_AUTH:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                isAuth : action.isAuth\r\n            })\r\n             \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport taskReducer from './taskReducer';\r\nimport listReducer from './listReducer';\r\nimport authReducer from './authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { getFirebase } from 'react-redux-firebase';\r\n\r\nconst middlewares = [\r\n    thunk.withExtraArgument(getFirebase)\r\n];\r\n\r\nlet reducers = combineReducers({\r\n    taskPage: taskReducer,\r\n    listPage: listReducer,\r\n    authPage: authReducer\r\n});\r\n\r\nconst composeEnhancers = window && window.__INITIAL_STATE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\nexport default store;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutTC } from '../../Redux/authAction';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const localIsAuth = localStorage.getItem('isAuth');\r\n    const login = localStorage.getItem('login')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOutClick = () => {\r\n        // debugger\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={css.header}>\r\n            <div className={css.headerText}>\r\n                <h1>ToDoList</h1>\r\n            </div>\r\n            <div className={css.logoutBlock}>\r\n                {(localIsAuth === 'true')\r\n                    ? <div className={css.logout}>\r\n                        <p className={css.logoutText}>\r\n                            {login}\r\n                        </p>\r\n                        <div>\r\n                            <button className={css.logoutBtn} onClick={() => onLogOutClick()} >LogOut</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : <p></p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputForm.module.css';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst showErrors = yup.object().shape({\r\n    taskText: yup.string().required(),\r\n    taskText: yup.string().max('64'),\r\n    taskText: yup.string().min('1'),\r\n})\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        props.onSubmit(data)\r\n        // let newTask = {\r\n        //     taskText: data.taskText,\r\n        //     isNow: data.isNow,\r\n        //     isDone: 'false'\r\n        // }\r\n        // props.useNewTask(newTask);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n            <div className = {css.isNow}>\r\n                <label for='isNow'>Срочность</label>\r\n                <input name='isNow' ref={register} id='isNow' type='checkbox' />\r\n            </div>\r\n\r\n            {errors.taskText?.message\r\n                ? <p>{errors.taskText?.message}</p>\r\n                : <input className={css.addBtn} value=\"ADD\" type='submit' />}\r\n\r\n            {/* <input className={css.addBtn} type='submit' value='ADD' /> */}\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTasksTC } from './../../Redux/taskAction';\r\nimport css from './Task.module.css';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst showErrors = yup.object().shape({\r\n    newText: yup.string().required(),\r\n    newText: yup.string().max('64'),\r\n    newText: yup.string().min('1'),\r\n})\r\n\r\nconst Task = (props) => {\r\n\r\n    let task = props.task;\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        resolver: yupResolver(showErrors),\r\n        defaultValues: {\r\n            newText: task.taskText\r\n        }\r\n    })\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(props.taskName);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    };\r\n\r\n    const onBlur = (data) => {\r\n        let task = props.task;\r\n\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n\r\n        if (!newTaskName) {\r\n            task.taskText = data.newText;\r\n        } else {\r\n            task.taskText = newTaskName;\r\n        }\r\n        debugger\r\n        dispatch(updateTasksTC(props.uid, listId, task))\r\n        // dispatch(updateListsTC(props.uid, list))\r\n    }\r\n\r\n\r\n\r\n    if (task.isDone === 'false') {\r\n        if (task.isNow) {\r\n            var style = css.high\r\n        } else if (!task.isNow) {\r\n            var style = css.low\r\n        }\r\n    } else {\r\n        var style = css.done\r\n    }\r\n\r\n    function changeTask(task) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        task.isDone = 'true';\r\n        props.checkTask(listId, task)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div className={`${css.task} + ${style}`}>\r\n                    <div className={css.text}>{task.taskText}</div>\r\n                    <button className={css.checkBtn} onClick={() => activateEditMode()}>Rename</button>\r\n                    {task.isDone === 'true'\r\n                        ? <button onClick={() => props.deleteTask(task.id)} className={css.deleteBtn}>Delete</button>\r\n                        : <button onClick={() => changeTask(props.task)} className={css.checkBtn}>Check done</button>\r\n                    }\r\n                </div>\r\n                : <form onBlur={handleSubmit(onBlur)}>\r\n                    <input ref={register} name='newText' className={css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} />\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Task","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addTasksTC, checkTasksTC, deleteTasksTC, getTasksTC } from '../../Redux/taskAction';\r\nimport InputForm from '../InputForm/InputForm';\r\nimport Task from './../Task/Task';\r\nimport css from './AllTasks.module.css';\r\n\r\n\r\nconst AllTasks = () => {\r\n\r\n    const tasks = useSelector(state => state.taskPage.tasks);\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const uid = useSelector(state => state.authPage.userUid);\r\n    const localIsAuth = localStorage.getItem('isAuth');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n       dispatch( getTasksTC(uid, listId));\r\n    }, []);\r\n\r\n    function useDeleteTask(id) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(deleteTasksTC(uid, listId, id))\r\n    };\r\n\r\n    function useCheckTask(id, task) {\r\n        dispatch(checkTasksTC(uid, id, task))\r\n    }\r\n\r\n    // function useNewTask(task) {\r\n    //     let path = window.location.href;\r\n    //     path = path.split('/');\r\n    //     let listId = path[path.length - 1];\r\n    //     dispatch(addTasksTC(uid, listId, task))\r\n    // }\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    if (localIsAuth === 'false') {\r\n        history.push('/')\r\n    }\r\n\r\n    let tasksArray = [];\r\n    if (tasks) {\r\n        tasksArray = Object.values(tasks);\r\n    } else {\r\n        tasksArray = []\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskText: data.taskText,\r\n            isNow: data.isNow,\r\n            isDone: 'false'\r\n        }\r\n        // props.useNewTask(newTask);\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(addTasksTC(uid, listId, newTask))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {tasksArray.length > 0\r\n                ? <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                    <h2 className={css.headerText}>Active Tasks: {tasksArray.filter(task => task.isDone === 'false').length}\r\n                                <NavLink className={css.headerLink} to={'/taskList'}>back</NavLink> </h2>\r\n\r\n                        <div className={css.inputForm}>\r\n                            <InputForm \r\n                            // useNewTask={useNewTask} \r\n                            onSubmit = {onSubmit}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={css.tasks}>\r\n                        {tasksArray.map(t => <Task task={t} deleteTask={useDeleteTask} checkTask={useCheckTask} uid = {uid}/>)}\r\n                    </div>\r\n                </div>\r\n                : <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                        <h2 className={css.headerText}>Active Tasks: 0<NavLink className={css.headerLink} to={'/taskList'}> back </NavLink>\r\n                        </h2>\r\n                        <div className={css.inputForm}>\r\n                            <InputForm \r\n                            // useNewTask={useNewTask} \r\n                            onSubmit = {onSubmit}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AllTasks;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputFormList.module.css';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst showErrors = yup.object().shape({\r\n    taskText: yup.string().required(),\r\n    taskText: yup.string().max('64'),\r\n    taskText: yup.string().min('1'),\r\n})\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    // const onSubmit = (data) => {\r\n    //     let newTask = {\r\n    //         taskListName: data.taskText\r\n    //     }\r\n    //     props.useNewTask(newTask);\r\n    //     setValue('taskText', '')\r\n    // }\r\n\r\n    const onSubmit = (data) => {\r\n        props.onSubmit(data);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    // console.log(errors.taskText?.message)\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n            {errors.taskText?.message\r\n                ? <p>{errors.taskText?.message}</p>\r\n                : <input className={css.addBtn} value=\"ADD\" type='submit' />}\r\n\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { updateListsTC } from './../../Redux/listAction';\r\nimport css from './List.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    newText: yup.string().required(),\r\n    newText: yup.string().max('64'),\r\n    newText: yup.string().min('1'),\r\n})\r\n\r\nconst List = (props) => {\r\n    \r\n    const { register, handleSubmit, errors } = useForm({\r\n        resolver: yupResolver(showErrors),\r\n        defaultValues: {\r\n            newText: props.list.taskListName\r\n        }\r\n    })\r\n\r\n    const taskName = useSelector(state => state.listPage.lists.taskListName)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(taskName);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onBlur = (data) => {\r\n        let list = props.list;\r\n        \r\n        if (!newTaskName) {\r\n            list.taskListName = data.newText;\r\n        } else {\r\n            list.taskListName = newTaskName;\r\n        }\r\n        dispatch(updateListsTC(props.uid, list))\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onBlur = {handleSubmit(onBlur)}>\r\n            {!editMode\r\n                ? <div className={`${css.list}`}>\r\n                    <NavLink className={`${css.link}`} to={`/taskList/${props.list.id}`} >\r\n                        <div className={css.text}>{props.list.taskListName}</div>\r\n                    </NavLink>\r\n                    <div className={css.btns}>\r\n                        <button className={css.updateBtn} onClick={() => activateEditMode(props.list.taskListName)}>Rename</button>\r\n                        <button className={css.deleteBtn} onClick={() => props.deleteList(props.list.id)}>Delete</button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <input ref={register} name='newText' className={css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} type='text' />\r\n\r\n            }\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default List","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport InputFormList from '../InputFormList/InputFormList';\r\nimport { addListsTC, deleteListsTC, getListsTC } from './../../Redux/listAction';\r\nimport List from './../List/List';\r\nimport css from './Lists.module.css';\r\n\r\n\r\nconst Lists = () => {\r\n\r\n    const lists = useSelector(state => state.listPage.lists);\r\n    const uid = localStorage.getItem('uid');\r\n    const localIsAuth = localStorage.getItem('isAuth');\r\n    const login = useSelector(state => state.authPage.login)\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n\r\n    \r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getListsTC(uid));\r\n    }, []);\r\n\r\n    // function useNewList(list) {\r\n    //     dispatch(addListsTC(uid, list))\r\n    // };\r\n\r\n    function useDeleteList(id) {\r\n        dispatch(deleteListsTC(uid, id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localIsAuth === 'false') {\r\n            history.push('/')\r\n        }\r\n    }, [login]);\r\n\r\n    if (localIsAuth === 'false') {\r\n        history.push('/')\r\n    }\r\n\r\n    let listsArray = [];\r\n    if (lists) {\r\n        listsArray = Object.values(lists);\r\n    } else {\r\n        listsArray = []\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskListName: data.taskText\r\n        }\r\n        // useNewList(newTask);\r\n        dispatch(addListsTC(uid, newTask))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {\r\n                listsArray.length > 0\r\n                    ? <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 className={css.headerText}>All Tasks</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputFormList \r\n                                // useNewTask={useNewList}\r\n                                onSubmit = {onSubmit}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={css.tasks}>\r\n                            {listsArray.length > 1\r\n                                ? listsArray.map(l => <List list={l} deleteList={useDeleteList}  uid={uid} />)\r\n                                : <List list={listsArray[0]} deleteList={useDeleteList} uid={uid} />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    : <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 >All Tasks: 0</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputFormList \r\n                                // useNewTask={useNewList} \r\n                                onSubmit = {onSubmit}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { loginTC } from './../../Redux/authAction';\r\nimport css from './LoginForm.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    login: yup.string().required(),\r\n    password: yup.string().required(),\r\n    login: yup.string().email(),\r\n    password: yup.string().min('6')\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    // const uid = localStorage.getItem('uid');\r\n    // isAuth = localStorage.getItem('isAuth');\r\n    const localIsAuth = localStorage.getItem('isAuth')\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    // console.log(errors)\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(loginTC(data.login, data.password, data.rememberme));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    // console.log(localIsAuth)\r\n    // console.log(isAuth)\r\n\r\n    if (localIsAuth === 'true') {\r\n        return <Redirect to={`/taskList`} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n                <h2>Login</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                {/* <div className={css.checkbox}>\r\n                    <label for='rememberme'>Remember me</label>\r\n                    <input name='rememberme' ref={register} className={css.check}\r\n                        type='checkbox' id='rememberme' />\r\n                </div> */}\r\n\r\n                <input className={css.btn} type='submit' value='Login' />\r\n\r\n                <div className={css.linkWrapper}>\r\n                <NavLink className={css.link} to={'/registration'} >Create account?</NavLink>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport { regTC } from '../../Redux/authAction';\r\nimport css from './RegForm.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst showErrors = yup.object().shape({\r\n    llogin: yup.string().required(),\r\n    password: yup.string().required(),\r\n    login: yup.string().email(),\r\n    password: yup.string().min('6')\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(regTC(data.login, data.password));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/taskList'} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n                <h2>Create account</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <input className={css.btn} type='submit' value='Create account' />\r\n\r\n                <div className={css.linkWrapper}>\r\n                    <NavLink className={css.link} to={'/'} >Login?</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { HashRouter, Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport store from './Redux/reduxStore';\nimport Header from './Components/Header/Header';\nimport AllTask from './Components/AllTasks/AllTasks';\nimport Lists from './Components/Lists/Lists';\nimport LoginForm from './Components/Login/LoginForm';\nimport RegForm from './Components/Registration/RegForm';\nimport css from './Components/ToDoList.module.css'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwbpTx7d1a0DUP2jHqAaKkZhl7sjW6QPA\",\n  authDomain: \"todolist-3009f.firebaseapp.com\",\n  databaseURL: \"https://todolist-3009f.firebaseio.com\",\n  projectId: \"todolist-3009f\",\n  storageBucket: \"todolist-3009f.appspot.com\",\n  messagingSenderId: \"907810208879\",\n  appId: \"1:907810208879:web:6d6bd6059a7bb44c3ce19a\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nconst ToDoList = () => {\n  return (\n    <div className = {css.todo}>\n      <Header />\n      <Route path='/taskList/:taskId' render={() => <AllTask />} />\n      <Route exact path='/taskList' render={() => <Lists />} />\n      <Route exact path='/' render={() => <LoginForm />} />\n      <Route path='/registration' render={() => <RegForm />} />\n    </div>\n  )\n}\n\nconst ToDoListWithRouter = withRouter(ToDoList);\n\nconst App = () => {\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider firebase={firebase} config={firebaseConfig} dispatch={store.dispatch}>\n        <div className=\"App\">\n          <HashRouter>\n            <ToDoListWithRouter />\n          </HashRouter>\n        </div>\n      </ReactReduxFirebaseProvider>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3uznX\",\"logout\":\"Header_logout__36Qlm\",\"logoutText\":\"Header_logoutText__1wuky\",\"logoutBtn\":\"Header_logoutBtn__dE7fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__K2ZVr\",\"text\":\"InputForm_text__3Icxu\",\"addBtn\":\"InputForm_addBtn__1129H\",\"isNow\":\"InputForm_isNow__1B2Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputFormList_form__1PVH_\",\"text\":\"InputFormList_text__1KX87\",\"addBtn\":\"InputFormList_addBtn__3w8m6\"};"],"sourceRoot":""}