{"version":3,"sources":["Components/AllTasks/AllTasks.module.css","Components/Task/Task.module.css","Components/List/List.module.css","Components/Lists/Lists.module.css","Components/Login/LoginForm.module.css","Components/Registration/RegForm.module.css","Components/Header/Header.module.css","Components/InputForm/InputForm.module.css","Components/InputFormList/InputFormList.module.css","Components/ToDoList.module.css","Redux/taskReducer.js","Components/InputForm/InputForm.jsx","Components/Task/Task.jsx","Components/AllTasks/AllTasks.jsx","Redux/authReducer.js","Components/Header/Header.jsx","Components/InputFormList/InputFormList.jsx","Redux/listReducer.js","Components/List/List.jsx","Components/Lists/Lists.jsx","Components/Login/LoginForm.jsx","Components/Registration/RegForm.jsx","Components/ToDoList.jsx","Redux/reduxStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","tasks","taskReducer","state","action","type","task","setTasks","InputForm","props","useForm","register","handleSubmit","setValue","className","css","form","onSubmit","data","newTask","taskText","isNow","isDone","useNewTask","text","name","ref","placeholder","for","id","addBtn","value","Task","console","log","useState","editMode","setEditMode","taskName","newTaskName","setNewTaskName","dispatch","useDispatch","style","high","low","done","useSelector","authPage","isAuth","newName","onChange","target","autoFocus","onBlur","path","window","location","href","listId","split","length","uid","a","updates","firebase","child","update","updateTasksTC","onClick","deleteBtn","deleteTask","checkTask","changeTask","checkBtn","to","AllTasks","taskPage","userUid","useDeleteTask","remove","deleteTasksTC","useCheckTask","checkTasksTC","newKey","push","key","addTasksTC","useEffect","on","elem","response","val","getTasksTC","tasksArray","Object","values","allTasksWrapper","allTasks","header","headerText","filter","headerLink","inputForm","map","t","login","authReducer","payload","setUserData","loginTC","password","signInWithEmailAndPassword","catch","error","onAuthStateChanged","user","email","Header","logoutBlock","logout","logoutText","logoutBtn","signOut","then","taskListName","lists","listReducer","List","listPage","list","updateListsTC","link","btns","delete","deleteList","Lists","useNewList","addListsTC","useDeleteList","deleteListsTC","getListsTC","listsArray","InputFormList","l","showErrors","yup","shape","required","LoginForm","resolver","yupResolver","errors","rememberme","formWrapper","message","checkbox","check","btn","linkWrapper","createUserWithEmailAndPassword","withRouter","todo","render","exact","RegForm","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30becb55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"AllTasks_allTasksWrapper__1UheL\",\"allTasks\":\"AllTasks_allTasks__3jm6-\",\"header\":\"AllTasks_header__YzbYR\",\"headerText\":\"AllTasks_headerText__3foYd\",\"headerLink\":\"AllTasks_headerLink__2oSo_\",\"inputForm\":\"AllTasks_inputForm__1y5iu\",\"tasks\":\"AllTasks_tasks__1glog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__2i8xg\",\"state\":\"Task_state__3ZMHM\",\"deleteBtn\":\"Task_deleteBtn__17owL\",\"checkBtn\":\"Task_checkBtn__2ZdP8\",\"text\":\"Task_text__Xthyq\",\"high\":\"Task_high___AUQL\",\"low\":\"Task_low__29NL3\",\"done\":\"Task_done__1oz61\",\"newName\":\"Task_newName__1piZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3-ERM\",\"link\":\"List_link__YbwRo\",\"btns\":\"List_btns__1cdxj\",\"newName\":\"List_newName__19D8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"Lists_allTasksWrapper__2REvb\",\"allTasks\":\"Lists_allTasks__3M8dN\",\"header\":\"Lists_header__1VL64\",\"headerText\":\"Lists_headerText__3WRBx\",\"headerLink\":\"Lists_headerLink__1qIC1\",\"inputForm\":\"Lists_inputForm__2SpqJ\",\"tasks\":\"Lists_tasks__2lp69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__IPpdV\",\"formWrapper\":\"LoginForm_formWrapper__1cpaO\",\"text\":\"LoginForm_text__3Brut\",\"checkbox\":\"LoginForm_checkbox__1mSLW\",\"btn\":\"LoginForm_btn__IM4EY\",\"linkWrapper\":\"LoginForm_linkWrapper__hxDC4\",\"link\":\"LoginForm_link__ZZRpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegForm_form__3CT8P\",\"formWrapper\":\"RegForm_formWrapper__1yt4d\",\"text\":\"RegForm_text__2OYST\",\"checkbox\":\"RegForm_checkbox__aFTbp\",\"btn\":\"RegForm_btn__39lHG\",\"linkWrapper\":\"RegForm_linkWrapper__2iD1h\",\"link\":\"RegForm_link__3uK-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3uznX\",\"logout\":\"Header_logout__36Qlm\",\"logoutText\":\"Header_logoutText__1wuky\",\"logoutBtn\":\"Header_logoutBtn__dE7fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__K2ZVr\",\"text\":\"InputForm_text__3Icxu\",\"addBtn\":\"InputForm_addBtn__1129H\",\"isNow\":\"InputForm_isNow__1B2Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputFormList_form__1PVH_\",\"text\":\"InputFormList_text__1KX87\",\"addBtn\":\"InputFormList_addBtn__3w8m6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDoList_todo__1yxY9\"};","// API\r\nimport * as firebase from 'firebase';\r\n\r\n// consts\r\nconst SET_TASK = 'SET-TASK';\r\n\r\n// initial state\r\nconst initialState = {\r\n    tasks: [\r\n    ]\r\n};\r\n\r\n\r\n// reducer\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: action.tasks.task\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default taskReducer;\r\n\r\n// action creators\r\nexport const setTasks = (tasks) => ({ type: SET_TASK, tasks });\r\n\r\n// thunk creators\r\nexport const getTasksTC = (uid ,listId) => async (dispatch) => {\r\n\r\n    const db = firebase.database().ref(uid).child('taskList');\r\n    db.on('value', (elem) => {\r\n        let response = elem.val();\r\n        console.log(response)\r\n        let tasks = response[listId]\r\n        dispatch(setTasks(tasks))\r\n    })\r\n};\r\n\r\nexport const deleteTasksTC = (uid, listId, id) => async (dispatch) => {\r\n    firebase.database().ref(uid).child('taskList').child(listId).child('task').child(id).remove();\r\n};\r\n\r\nexport const checkTasksTC = (uid, listId, task) => async (dispatch) => {\r\n    var updates = {};\r\n    let id = task.id\r\n    updates[id] = task;\r\n    firebase.database().ref(uid).child('taskList').child(listId).child('task').update(updates)\r\n};\r\n\r\nexport const addTasksTC = (uid ,listId, task) => async (dispatch) => {\r\n    var newKey = firebase.database().ref('task').push().key;\r\n    var updates = {};\r\n    task.id = newKey;\r\n    updates[newKey] = task;\r\n    firebase.database().ref(uid).child('taskList').child(listId).child('task').update(updates);\r\n};\r\n\r\nexport const updateTasksTC = (uid,listId, task) => async (dispatch) => {\r\n    let id = task.id;\r\n    var updates = {};\r\n    updates[id] = task\r\n    firebase.database().ref(uid).child('taskList').child(listId).child('task').update(updates);\r\n};","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputForm.module.css';\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskText: data.taskText,\r\n            isNow: data.isNow,\r\n            isDone: 'false'\r\n        }\r\n        props.useNewTask(newTask);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n            <div className = {css.isNow}>\r\n                <label for='isNow'>Срочность</label>\r\n                <input name='isNow' ref={register} id='isNow' type='checkbox' />\r\n            </div>\r\n\r\n            <input className={css.addBtn} type='submit' value='ADD' />\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport css from './Task.module.css';\r\nimport {updateTasksTC} from './../../Redux/taskReducer'\r\n\r\nconst Task = (props) => {\r\n\r\n    console.log(props)\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(props.taskName);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        \r\n        let task = props.task\r\n        task.taskText = newTaskName;\r\n        dispatch(updateTasksTC(props.uid, listId, task))\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    }\r\n\r\n    let task = props.task;\r\n\r\n    if (task.isDone == 'false') {\r\n        if (task.isNow) {\r\n            var style = css.high\r\n        } else if (!task.isNow) {\r\n            var style = css.low\r\n        }\r\n    } else {\r\n        var style = css.done\r\n    }\r\n\r\n    function changeTask(task) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        task.isDone = 'true';\r\n        props.checkTask(listId, task)\r\n    };\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    if (!isAuth) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div className={`${css.task} + ${style}`}>\r\n                    <div className={css.text}>{task.taskText}</div>\r\n                    <button className={css.update} onClick={() => activateEditMode()} className={css.deleteBtn}>Rename</button>\r\n                    {task.isDone == 'true'\r\n                        ? <button onClick={() => props.deleteTask(task.id)} className={css.deleteBtn}>Delete</button>\r\n                        : <button onClick={() => changeTask(props.task)} className={css.checkBtn}>Check done</button>}\r\n                </div>\r\n                : <input className={css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} />\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Task","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addTasksTC, checkTasksTC, deleteTasksTC, getTasksTC } from '../../Redux/taskReducer';\r\nimport InputForm from '../InputForm/InputForm';\r\nimport Task from './../Task/Task';\r\nimport css from './AllTasks.module.css';\r\n\r\n\r\nconst AllTasks = () => {\r\n\r\n    const tasks = useSelector(state => state.taskPage.tasks);\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const uid = useSelector(state => state.authPage.userUid)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(getTasksTC(uid, listId));\r\n    }, []);\r\n\r\n    function useDeleteTask(id) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(deleteTasksTC(uid, listId, id))\r\n    };\r\n\r\n    function useCheckTask(id, task) {\r\n        dispatch(checkTasksTC(uid, id, task))\r\n    }\r\n\r\n    function useNewTask(task) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(addTasksTC(uid, listId, task))\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n    let tasksArray = [];\r\n    if (tasks) {\r\n        tasksArray = Object.values(tasks);\r\n    } else {\r\n        tasksArray = []\r\n    };\r\n\r\n    // console.log(tasksArray)\r\n\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {tasksArray.length > 0\r\n                ? <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                    <h2 className={css.headerText}>Active Tasks: {tasksArray.filter(task => task.isDone == 'false').length}\r\n                                <NavLink className={css.headerLink} to={'/taskList'}>back</NavLink> </h2>\r\n\r\n                        <div className={css.inputForm}>\r\n                            <InputForm useNewTask={useNewTask} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={css.tasks}>\r\n                        {tasksArray.map(t => <Task task={t} deleteTask={useDeleteTask} checkTask={useCheckTask} uid = {uid}/>)}\r\n                    </div>\r\n                </div>\r\n                : <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                        <h2 className={css.headerText}>Active Tasks: 0<NavLink className={css.headerLink} to={'/taskList'}> back </NavLink>\r\n                        </h2>\r\n                        <div className={css.inputForm}>\r\n                            <InputForm useNewTask={useNewTask} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AllTasks;","//API\r\nimport * as firebase from 'firebase';\r\n\r\n//consts\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n//initial state\r\nlet initialState = {\r\n    login: 'login',\r\n    isAuth: false,\r\n    userUid: ''\r\n};\r\n\r\n//reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n\r\n//action creators\r\nexport const setUserData = (login, isAuth, userUid) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { login, isAuth,  userUid}\r\n});\r\n\r\n//thunk creators\r\n\r\nexport const loginTC = (login, password) => async (dispatch) => {\r\n    firebase.auth().signInWithEmailAndPassword(login, password)\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            \r\n            if (user) {\r\n                if (user.email == login) {\r\n                    dispatch(setUserData(login, true, user.uid));\r\n                }\r\n            } else {\r\n                dispatch(setUserData('', false))\r\n            }\r\n        })\r\n};\r\n\r\nexport const logoutTC = () => async (dispatch) => {\r\n    firebase.auth().signOut().then(function() {\r\n        dispatch(setUserData('', false));\r\n    })\r\n}\r\n\r\nexport const regTC = (login, password) => async (dispatch) => {\r\n    firebase.auth().createUserWithEmailAndPassword(login, password)\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n        dispatch(loginTC(login, password))\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutTC } from '../../Redux/authReducer';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const login = useSelector(state => state.authPage.login);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={css.header}>\r\n            <div className={css.headerText}>\r\n                <h1>ToDoList</h1>\r\n            </div>\r\n            <div className={css.logoutBlock}>\r\n                {isAuth\r\n                    ? <div className={css.logout}>\r\n                        <p className={css.logoutText}>\r\n                            {login}\r\n                        </p>\r\n                        <div>\r\n                            <button className={css.logoutBtn} onClick={() => dispatch(logoutTC())} >LogOut</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : <p></p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputFormList.module.css';\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskListName: data.taskText\r\n        }\r\n        props.useNewTask(newTask);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n                \r\n            <input className={css.addBtn} value=\"ADD\" type='submit' />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","// API\r\nimport * as firebase from 'firebase';\r\n\r\n// consts\r\nconst SET_LIST = 'SET-LIST';\r\n\r\n// initial state\r\nconst initialState = {\r\n    lists: [{}]\r\n};\r\n\r\n\r\n// reducer\r\nconst listReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LIST:\r\n            // debugger\r\n            return {\r\n                ...state,\r\n                lists: action.lists\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listReducer;\r\n\r\n// action creators\r\nexport const setLists = (lists) => ({ type: SET_LIST, lists });\r\n\r\n// thunk creators\r\nexport const getListsTC = (uid) => async (dispatch) => {\r\n    const db = firebase.database().ref(uid).child('taskList');\r\n    db.on('value', (elem) => {\r\n        \r\n        let response = elem.val();\r\n        // console.log(response)\r\n        dispatch(setLists(response))\r\n    })\r\n};\r\n\r\nexport const deleteListsTC = (uid, id) => async (dispatch) => {\r\n    console.log(id)\r\n    firebase.database().ref(uid).child('taskList').child(id).remove();\r\n    // dispatch(getListsTC());\r\n};\r\n\r\nexport const updateListsTC = (uid, list) => async (dispatch) => {\r\n    // debugger\r\n    let id = list.id;\r\n    var updates = {};\r\n    updates[id] = list\r\n    firebase.database().ref(uid).child('taskList').update(updates);\r\n    // dispatch(getListsTC());\r\n};\r\n\r\nexport const addListsTC = (uid, list) => async (dispatch) => {\r\n    firebase.database().ref(uid).child('taskList');\r\n    var newKey = firebase.database().ref(uid).child('taskList').push().key;\r\n    var updates = {};\r\n    list.id = newKey;\r\n    updates[newKey] = list;\r\n    firebase.database().ref(uid).child('taskList').update(updates);\r\n    \r\n    // dispatch(getListsTC());\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { updateListsTC } from './../../Redux/listReducer';\r\nimport css from './List.module.css';\r\n\r\nconst List = (props) => {\r\n\r\n    const taskName = useSelector(state => state.listPage.lists.taskListName)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(taskName);\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        console.log(editMode)\r\n        console.log(props);\r\n        let list = props.list\r\n        list.taskListName = newTaskName;\r\n        dispatch(updateListsTC(props.uid, list))\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div  className={`${css.list}`}>\r\n                    <NavLink className={`${css.link}`} to={`/taskList/${props.list.id}`} >\r\n                        <div className={css.text}>{props.list.taskListName}</div>\r\n                    </NavLink>\r\n                    <div className={css.btns}>\r\n                        <button className={css.update} onClick={() => activateEditMode()} className={css.deleteBtn}>Rename</button>\r\n                        <button className={css.delete} onClick={() => props.deleteList(props.list.id)} className={css.deleteBtn}>Delete</button>\r\n                    </div>\r\n                </div>\r\n                : <input className = {css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport InputFormList from '../InputFormList/InputFormList';\r\nimport { addListsTC, deleteListsTC, getListsTC } from './../../Redux/listReducer';\r\nimport List from './../List/List';\r\nimport css from './Lists.module.css';\r\n\r\n\r\nconst Lists = () => {\r\n\r\n    const lists = useSelector(state => state.listPage.lists);\r\n    const uid = useSelector(state => state.authPage.userUid);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getListsTC(uid));\r\n    }, []);\r\n\r\n    function useNewList(list) {\r\n        dispatch(addListsTC(uid, list))\r\n    };\r\n\r\n    function useDeleteList(id) {\r\n        dispatch(deleteListsTC(uid, id))\r\n    }\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    let listsArray = [];\r\n    if (lists) {\r\n        listsArray = Object.values(lists);\r\n    } else {\r\n        listsArray = []\r\n    }\r\n\r\n    console.log(listsArray.length)\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {\r\n                listsArray.length > 0\r\n                    ? <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 className={css.headerText}>All Tasks</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputFormList useNewTask={useNewList} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={css.tasks}>\r\n                            {listsArray.length > 1\r\n                                ? listsArray.map(l => <List list={l} deleteList={useDeleteList}  uid={uid} />)\r\n                                : <List list={listsArray[0]} deleteList={useDeleteList} uid={uid} />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    : <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 >All Tasks: 0</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputFormList useNewTask={useNewList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { loginTC } from './../../Redux/authReducer';\r\nimport css from './LoginForm.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    login: yup.string().required(),\r\n    password: yup.string().required(),\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const uid = useSelector(state => state.authPage.userUid)\r\n    // console.log(isAuth)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(loginTC(data.login, data.password, data.rememberme));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={`/taskList`} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n            <h2>Login</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <div className={css.checkbox}>\r\n                    <label for='rememberme'>Remember me</label>\r\n                    <input name='rememberme' ref={register} className={css.check}\r\n                        type='checkbox' id='rememberme' />\r\n                </div>\r\n\r\n\r\n\r\n                <input className={css.btn} type='submit' value='Login' />\r\n            </div>\r\n\r\n\r\n            <div className={css.linkWrapper}>\r\n                <NavLink className={css.link} to={'/registration'} >Create account?</NavLink>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport { regTC } from '../../Redux/authReducer';\r\nimport css from './RegForm.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst showErrors = yup.object().shape({\r\n    login: yup.string().required(),\r\n    password: yup.string().required(),\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    // console.log(isAuth)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(regTC(data.login, data.password));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/taskList'} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n                <h2>Create account</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <input className={css.btn} type='submit' value='Create account' />\r\n\r\n                <div className={css.linkWrapper}>\r\n                    <NavLink className={css.link} to={'/'} >Login?</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport AllTask from './AllTasks/AllTasks';\r\nimport Header from './Header/Header';\r\nimport Lists from './Lists/Lists';\r\nimport LoginForm from './Login/LoginForm';\r\nimport css from './ToDoList.module.css';\r\nimport RegForm from './Registration/RegForm'\r\n\r\nconst ToDoList = () => {\r\n\r\n    return (\r\n        \r\n            <div className={css.todo}>\r\n                <Header />\r\n                <Route path='/taskList/:taskId' render={() => <AllTask />} />\r\n                <Route exact path='/taskList' render={() => <Lists />} />\r\n\r\n                <Route exact path='/' render={() => <LoginForm /> } />\r\n\r\n                <Route path='/registration' render={() => <RegForm /> } />\r\n            </div>\r\n\r\n    )\r\n};\r\n\r\nexport default withRouter(ToDoList);\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport taskReducer from './taskReducer';\r\nimport listReducer from './listReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nlet reducers = combineReducers({\r\n    taskPage: taskReducer,\r\n    listPage: listReducer,\r\n    authPage: authReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport ToDoList from './Components/ToDoList';\nimport store from './Redux/reduxStore';\n\nconst App = () => {\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <HashRouter>\n          <ToDoList />\n        </HashRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwbpTx7d1a0DUP2jHqAaKkZhl7sjW6QPA\",\n  authDomain: \"todolist-3009f.firebaseapp.com\",\n  databaseURL: \"https://todolist-3009f.firebaseio.com\",\n  projectId: \"todolist-3009f\",\n  storageBucket: \"todolist-3009f.appspot.com\",\n  messagingSenderId: \"907810208879\",\n  appId: \"1:907810208879:web:6d6bd6059a7bb44c3ce19a\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}