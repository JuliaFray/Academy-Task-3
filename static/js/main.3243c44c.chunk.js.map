{"version":3,"sources":["Components/Task/Task.module.css","Components/AllTasks/AllTasks.module.css","Components/ToDoList.module.css","Components/List/List.module.css","Components/Lists/Lists.module.css","Components/Login/LoginForm.module.css","Components/Registration/RegForm.module.css","Redux/taskAction.js","Redux/taskReducer.js","Redux/listAction.js","Redux/listReducer.js","Redux/authAction.js","Redux/authReducer.js","Redux/reduxStore.js","Components/Header/Header.jsx","Components/InputForm/InputForm.jsx","Components/Task/Task.jsx","Components/AllTasks/AllTasks.jsx","Components/List/List.jsx","Components/Lists/Lists.jsx","Components/Login/LoginForm.jsx","Components/Registration/RegForm.jsx","App.js","serviceWorker.js","index.js","Components/Header/Header.module.css","Components/InputForm/InputForm.module.css"],"names":["module","exports","setTasks","tasks","type","updateTasksTC","uid","listId","task","dispatch","getState","getFirebase","localStorage","getItem","updates","id","database","ref","child","update","initialState","SET_TASK","taskReducer","state","action","Object","assign","setLists","lists","updateListsTC","list","SET_LIST","listReducer","setUserData","login","isAuth","userUid","payload","setIsAuth","loginTC","password","auth","signInWithEmailAndPassword","then","user","currentUser","email","setItem","checkCurrentUser","SET_USER_DATA","SET_IS_AUTH","authReducer","middlewares","thunk","withExtraArgument","reducers","combineReducers","taskPage","listPage","authPage","composeEnhancers","window","__INITIAL_STATE__","compose","store","createStore","applyMiddleware","Header","localIsAuth","useDispatch","onLogOutClick","signOut","className","css","header","headerText","logoutBlock","logout","logoutText","logoutBtn","onClick","showErrors","yup","shape","taskText","required","max","min","InputForm","props","useForm","resolver","yupResolver","register","handleSubmit","setValue","errors","form","onSubmit","data","text","name","placeholder","isNow","for","message","addBtn","value","newText","Task","defaultValues","useState","editMode","setEditMode","taskName","newTaskName","setNewTaskName","activateEditMode","isDone","style","done","high","low","onBlur","path","location","href","split","length","newName","onChange","target","autoFocus","btns","checkBtn","changeBtn","changeIsDone","deleteTask","deleteBtn","changeIsNow","checkTask","changeTask","AllTasks","useSelector","useDeleteTask","remove","deleteTasksTC","useCheckTask","checkTasksTC","useChangeIsNow","newIsNow","useChangeIsDone","newIsDone","useEffect","on","elem","response","val","getTasksTC","history","useHistory","push","tasksArray","values","newTask","newKey","key","addTasksTC","allTasksWrapper","allTasks","filter","headerLink","to","inputForm","map","t","List","taskListName","link","updateBtn","deleteList","Lists","useDeleteList","deleteListsTC","getListsTC","listsArray","addListsTC","l","LoginForm","rememberme","formWrapper","btn","linkWrapper","llogin","createUserWithEmailAndPassword","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","ToDoListWithRouter","withRouter","todo","render","exact","RegForm","App","config","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.3243c44c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__2i8xg\",\"state\":\"Task_state__3ZMHM\",\"btns\":\"Task_btns__3FJDc\",\"text\":\"Task_text__Xthyq\",\"high\":\"Task_high___AUQL\",\"low\":\"Task_low__29NL3\",\"done\":\"Task_done__1oz61\",\"newName\":\"Task_newName__1piZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"AllTasks_allTasksWrapper__1UheL\",\"allTasks\":\"AllTasks_allTasks__3jm6-\",\"header\":\"AllTasks_header__YzbYR\",\"headerText\":\"AllTasks_headerText__3foYd\",\"headerLink\":\"AllTasks_headerLink__2oSo_\",\"inputForm\":\"AllTasks_inputForm__1y5iu\",\"tasks\":\"AllTasks_tasks__1glog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDoList_todo__1yxY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3-ERM\",\"link\":\"List_link__YbwRo\",\"btns\":\"List_btns__1cdxj\",\"newName\":\"List_newName__19D8Q\",\"high\":\"List_high__3_aHN\",\"low\":\"List_low__1W-K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"Lists_allTasksWrapper__2REvb\",\"allTasks\":\"Lists_allTasks__3M8dN\",\"header\":\"Lists_header__1VL64\",\"headerText\":\"Lists_headerText__3WRBx\",\"headerLink\":\"Lists_headerLink__1qIC1\",\"inputForm\":\"Lists_inputForm__2SpqJ\",\"tasks\":\"Lists_tasks__2lp69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__IPpdV\",\"formWrapper\":\"LoginForm_formWrapper__1cpaO\",\"text\":\"LoginForm_text__3Brut\",\"checkbox\":\"LoginForm_checkbox__1mSLW\",\"btn\":\"LoginForm_btn__IM4EY\",\"linkWrapper\":\"LoginForm_linkWrapper__hxDC4\",\"link\":\"LoginForm_link__ZZRpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegForm_form__3CT8P\",\"formWrapper\":\"RegForm_formWrapper__1yt4d\",\"text\":\"RegForm_text__2OYST\",\"checkbox\":\"RegForm_checkbox__aFTbp\",\"btn\":\"RegForm_btn__39lHG\",\"linkWrapper\":\"RegForm_linkWrapper__2iD1h\",\"link\":\"RegForm_link__3uK-D\"};","// consts\r\nexport const SET_TASK = 'SET-TASK';\r\n\r\n// action creators\r\nexport const setTasks = (tasks) => ({ type: SET_TASK, tasks });\r\n\r\n// thunk creators\r\nexport function getTasksTC(uid, listId) {\r\n    return (dispatch, getState, getFirebase) => {\r\n\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid')\r\n        }\r\n\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .on('value', (elem) => {\r\n                let response = elem.val();\r\n                let tasks = response\r\n                dispatch(setTasks(tasks))\r\n            })\r\n    }\r\n};\r\n\r\nexport function deleteTasksTC(uid, listId, id) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .child(id)\r\n            .remove()\r\n    }\r\n};\r\n\r\nexport function checkTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        var updates = {};\r\n        let id = task.id\r\n        updates[id] = task;\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};\r\n\r\nexport function addTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        var newKey = getFirebase()\r\n            .database()\r\n            .ref('task')\r\n            .push()\r\n            .key;\r\n\r\n        var updates = {};\r\n        task.id = newKey;\r\n        updates[newKey] = task;\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};\r\n\r\nexport function updateTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        let id = task.id;\r\n        var updates = {};\r\n        updates[id] = task\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};","//action\r\nimport { SET_TASK, setTasks } from './taskAction'\r\n\r\n// initial state\r\nconst initialState = {\r\n    tasks: setTasks.SET_TASK\r\n};\r\n\r\n// reducer\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASK:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                tasks: action.tasks.task\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default taskReducer;","// consts\r\nexport const SET_LIST = 'SET-LIST';\r\n\r\n// action creators\r\nexport const setLists = (lists) => ({ type: SET_LIST, lists });\r\n\r\n// thunk creators\r\nexport function getListsTC(uid) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        // console.log(uid)\r\n        // console.log(localStorage.getItem('uid'))\r\n\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .on('value', (elem) => {\r\n                let response = elem.val();\r\n                dispatch(setLists(response))\r\n            })\r\n    }\r\n};\r\n\r\nexport function deleteListsTC(uid, id) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(id)\r\n            .remove()\r\n    }\r\n};\r\n\r\nexport function updateListsTC(uid, list) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        let id = list.id;\r\n        var updates = {};\r\n        updates[id] = list\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .update(updates);\r\n    }\r\n};\r\n\r\nexport function addListsTC(uid, list) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList');\r\n        var newKey = getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .push()\r\n            .key;\r\n        var updates = {};\r\n        list.id = newKey;\r\n        updates[newKey] = list;\r\n        return getFirebase()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .update(updates);\r\n    }\r\n}\r\n\r\nexport function changeIsNowListsTC(uid, list) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        if (!uid) {\r\n            uid = localStorage.getItem('uid');\r\n        }\r\n        let id = list.id;\r\n        var updates = {};\r\n        updates[id] = list\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .update(updates);\r\n    }\r\n};","// action\r\nimport { SET_LIST, setLists } from './listAction'\r\n\r\n// initial state\r\nconst initialState = {\r\n    lists: setLists.SET_LIST\r\n};\r\n\r\n\r\n// reducer\r\nconst listReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LIST:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                lists: action.lists\r\n            })\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listReducer;\r\n","//consts\r\nexport const SET_USER_DATA = 'SET-USER-DATA';\r\nexport const SET_IS_AUTH = 'SET-IS-AUTH';\r\n\r\n//action creators\r\nexport const setUserData = (login, isAuth, userUid) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { login, isAuth, userUid }\r\n});\r\n\r\nexport const setIsAuth = (isAuth) => ({ type: SET_IS_AUTH, isAuth })\r\n\r\n//thunk creators\r\nexport function loginTC(login, password) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .signInWithEmailAndPassword(login, password)\r\n            .then(() => {\r\n                dispatch(checkCurrentUser(login))\r\n            })\r\n    }\r\n};\r\n\r\nfunction checkCurrentUser(login) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        var user = getFirebase()\r\n            .auth()\r\n            .currentUser;\r\n        if (user) {\r\n            if (user.email === login) {\r\n                localStorage.setItem('uid', user.uid);\r\n                localStorage.setItem('isAuth', 'true');\r\n                localStorage.setItem('login', login)\r\n                // console.log(localStorage.getItem('uid'));\r\n                dispatch(setUserData(login, true, user.uid));\r\n                dispatch(setIsAuth(true))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function logoutTC() {\r\n    return (dispatch, getState, getFirebase) => {\r\n        localStorage.setItem('uid', '');\r\n        localStorage.setItem('isAuth', 'false');\r\n        localStorage.setItem('login', '')\r\n        return getFirebase()\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch(setUserData('', false, ''));\r\n                dispatch(setIsAuth(false))\r\n                // localStorage.clear()\r\n            })\r\n    }\r\n}\r\n\r\nexport function regTC(login, password) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .createUserWithEmailAndPassword(login, password)\r\n            .then(() => {\r\n                dispatch(loginTC(login, password))\r\n            })\r\n    }\r\n}","//action\r\nimport { SET_IS_AUTH, SET_USER_DATA, setUserData } from './authAction';\r\n\r\n//initial state\r\nlet initialState = {\r\n    payload: setUserData.SET_USER_DATA,\r\n    login: '',\r\n    isAuth: setUserData.SET_IS_AUTH,\r\n    userUid: ''\r\n};\r\n\r\n//reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            // debugger\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n\r\n        case SET_IS_AUTH:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                isAuth : action.isAuth\r\n            })\r\n             \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport taskReducer from './taskReducer';\r\nimport listReducer from './listReducer';\r\nimport authReducer from './authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { getFirebase } from 'react-redux-firebase';\r\n\r\nconst middlewares = [\r\n    thunk.withExtraArgument(getFirebase)\r\n];\r\n\r\nlet reducers = combineReducers({\r\n    taskPage: taskReducer,\r\n    listPage: listReducer,\r\n    authPage: authReducer\r\n});\r\n\r\nconst composeEnhancers = window && window.__INITIAL_STATE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\nexport default store;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logoutTC } from '../../Redux/authAction';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    const localIsAuth = localStorage.getItem('isAuth');\r\n    const login = localStorage.getItem('login')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOutClick = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={css.header}>\r\n            <div className={css.headerText}>\r\n                <h1>ToDoList</h1>\r\n            </div>\r\n            <div className={css.logoutBlock}>\r\n                {(localIsAuth === 'true')\r\n                    ? <div className={css.logout}>\r\n                        <p className={css.logoutText}>\r\n                            {login}\r\n                        </p>\r\n                        <div>\r\n                            <button className={css.logoutBtn} onClick={() => onLogOutClick()} >LogOut</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : <p></p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputForm.module.css';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst showErrors = yup.object().shape({\r\n    taskText: yup.string().required().max('20').min('1'),\r\n})\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        props.onSubmit(data)\r\n        // let newTask = {\r\n        //     taskText: data.taskText,\r\n        //     isNow: data.isNow,\r\n        //     isDone: 'false'\r\n        // }\r\n        // props.useNewTask(newTask);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n            <div className = {css.isNow}>\r\n                <label for='isNow'>Срочность</label>\r\n                <input name='isNow' ref={register} id='isNow' type='checkbox' />\r\n            </div>\r\n\r\n            {errors.taskText?.message\r\n                ? <p>{errors.taskText?.message}</p>\r\n                : <input className={css.addBtn} value=\"ADD\" type='submit' />}\r\n\r\n            {/* <input className={css.addBtn} type='submit' value='ADD' /> */}\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTasksTC } from './../../Redux/taskAction';\r\nimport css from './Task.module.css';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst showErrors = yup.object().shape({\r\n    newText: yup.string().required().min('1').max('10'),\r\n})\r\n\r\nconst Task = (props) => {\r\n    \r\n\r\n    let task = props.task;\r\n    // console.log(task)\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        resolver: yupResolver(showErrors),\r\n        defaultValues: {\r\n            newText: task.taskText\r\n        }\r\n    })\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(props.taskName);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    };\r\n\r\n    const onBlur = (data) => {\r\n        let task = props.task;\r\n\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n\r\n        if (!newTaskName) {\r\n            task.taskText = data.newText;\r\n        } else {\r\n            task.taskText = newTaskName;\r\n        }\r\n        debugger\r\n        dispatch(updateTasksTC(props.uid, listId, task))\r\n        // dispatch(updateListsTC(props.uid, list))\r\n    }\r\n\r\n\r\n\r\n    if (!task.isDone) {\r\n        if (task.isNow) {\r\n            var style = css.high\r\n        } else if (!task.isNow) {\r\n            var style = css.low\r\n        }\r\n    } else {\r\n        var style = css.done\r\n    }\r\n\r\n    function changeTask(task) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        task.isDone = 'true';\r\n        props.checkTask(listId, task)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div className={`${css.task} + ${style}`}>\r\n                    <div className={`${css.text}`}>{task.taskText}</div>\r\n                    {task.isDone === 'true'\r\n                        ? <div className={css.btns}>\r\n                            <button className={css.checkBtn} onClick={() => activateEditMode()}>Rename</button>\r\n\r\n                            <button className={css.changeBtn} onClick={() => props.changeIsDone(task)}>Check Undone</button>\r\n\r\n                            <button onClick={() => props.deleteTask(task.id)} className={css.deleteBtn}>Delete</button>\r\n                        </div>\r\n\r\n                        : <div className={css.btns}>\r\n                            <button className={css.checkBtn} onClick={() => activateEditMode()}>Rename</button>\r\n\r\n                            <button className={css.changeBtn} onClick={() => props.changeIsNow(task)}>Change Priority</button>\r\n\r\n                            <button onClick={() => changeTask(props.task)} className={css.checkBtn}>Check done</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : <form onBlur={handleSubmit(onBlur)}>\r\n                    <input ref={register} name='newText' className={css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} />\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Task","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addTasksTC, checkTasksTC, deleteTasksTC, getTasksTC,updateTasksTC } from '../../Redux/taskAction';\r\nimport InputForm from '../InputForm/InputForm';\r\nimport Task from './../Task/Task';\r\nimport css from './AllTasks.module.css';\r\n\r\n\r\nconst AllTasks = () => {\r\n\r\n    const tasks = useSelector(state => state.taskPage.tasks);\r\n    const uid = useSelector(state => state.authPage.userUid);\r\n    const localIsAuth = localStorage.getItem('isAuth');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(getTasksTC(uid, listId));\r\n    }, []);\r\n\r\n    function useDeleteTask(id) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(deleteTasksTC(uid, listId, id))\r\n    };\r\n\r\n    function useCheckTask(id, task) {\r\n        dispatch(checkTasksTC(uid, id, task))\r\n    }\r\n\r\n    function useChangeIsNow(task) {\r\n        let newIsNow = !task.isNow\r\n        task.isNow = newIsNow;\r\n\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n\r\n        dispatch(updateTasksTC(uid, listId, task))\r\n    }\r\n\r\n    function useChangeIsDone(task) {\r\n        // console.log(task.isDone)\r\n\r\n        let newIsDone = !task.isDone\r\n        task.isDone = newIsDone;\r\n\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n\r\n        dispatch(updateTasksTC(uid, listId, task))\r\n\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    if (localIsAuth === 'false') {\r\n        history.push('/')\r\n    }\r\n\r\n    let tasksArray = [];\r\n    if (tasks) {\r\n        tasksArray = Object.values(tasks);\r\n    } else {\r\n        tasksArray = []\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskText: data.taskText,\r\n            isNow: data.isNow,\r\n            isDone: false\r\n        }\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(addTasksTC(uid, listId, newTask))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {tasksArray.length > 0\r\n                ? <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                        <h2 className={css.headerText}>Active Tasks: {tasksArray.filter(task => task.isDone === 'false').length}\r\n                            <NavLink className={css.headerLink} to={'/taskList'}>back</NavLink> </h2>\r\n\r\n                        <div className={css.inputForm}>\r\n                            <InputForm onSubmit={onSubmit} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={css.tasks}>\r\n                        {tasksArray.map(t => <Task task={t} changeIsNow = {useChangeIsNow} deleteTask={useDeleteTask} checkTask={useCheckTask} changeIsDone={useChangeIsDone} uid={uid} />)}\r\n                    </div>\r\n                </div>\r\n                : <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                        <h2 className={css.headerText}> Active Tasks: 0<NavLink className={css.headerLink} to={'/taskList'}> back </NavLink>\r\n                        </h2>\r\n                        <div className={css.inputForm}>\r\n                            <InputForm onSubmit={onSubmit} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AllTasks;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { updateListsTC } from './../../Redux/listAction';\r\nimport css from './List.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    newText: yup.string().required().max('20').min('1')\r\n})\r\n\r\nconst List = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        resolver: yupResolver(showErrors),\r\n        defaultValues: {\r\n            newText: props.list.taskListName\r\n        }\r\n    })\r\n\r\n    const taskName = useSelector(state => state.listPage.lists.taskListName)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(taskName);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onBlur = (data) => {\r\n        let list = props.list;\r\n\r\n        if (!newTaskName) {\r\n            list.taskListName = data.newText;\r\n        } else {\r\n            list.taskListName = newTaskName;\r\n        }\r\n        dispatch(updateListsTC(props.uid, list))\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    }\r\n\r\n    let task = props.list\r\n\r\n\r\n    if (task.isNow) {\r\n        var style = css.high\r\n    } else if (!task.isNow) {\r\n        var style = css.low\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form onBlur={handleSubmit(onBlur)}>\r\n            {!editMode\r\n                ? <div className={`${css.list} + ${style}`}>\r\n                    <NavLink className={`${css.link}`} to={`/taskList/${props.list.id}`} >\r\n                        <div className={css.text}>\r\n                            {props.list.taskListName}\r\n\r\n                            {props.list.task\r\n                                ? ' ( ' + Object.values(props.list.task).length + ' )'\r\n                                : ''}\r\n                        </div>\r\n                    </NavLink>\r\n                    <div className={css.btns}>\r\n                        <button className={css.updateBtn} onClick={() => activateEditMode(props.list.taskListName)}>Rename</button>\r\n\r\n                        <button className={css.changeBtn} onClick={() => props.changeIsNow(props.list)}>Change Priority</button>\r\n\r\n                        <button className={css.deleteBtn} onClick={() => props.deleteList(props.list.id)}>Delete</button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <input ref={register} name='newText' className={css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} type='text' />\r\n\r\n            }\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default List","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport InputForm from '../InputForm/InputForm';\r\nimport { addListsTC, deleteListsTC, getListsTC, updateListsTC } from './../../Redux/listAction';\r\nimport List from './../List/List';\r\nimport css from './Lists.module.css';\r\n\r\n\r\nconst Lists = () => {\r\n\r\n    const lists = useSelector(state => state.listPage.lists);\r\n    const uid = localStorage.getItem('uid');\r\n    const localIsAuth = localStorage.getItem('isAuth');\r\n    const login = useSelector(state => state.authPage.login)\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getListsTC(uid));\r\n    }, []);\r\n\r\n    function useDeleteList(id) {\r\n        dispatch(deleteListsTC(uid, id))\r\n    }\r\n\r\n    function useChangeIsNow(list) {\r\n        let newIsNow = !list.isNow\r\n        list.isNow = newIsNow;\r\n        dispatch(updateListsTC(uid, list))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localIsAuth === 'false') {\r\n            history.push('/')\r\n        }\r\n    }, [login]);\r\n\r\n    if (localIsAuth === 'false') {\r\n        history.push('/')\r\n    }\r\n\r\n    let listsArray = [];\r\n    if (lists) {\r\n        listsArray = Object.values(lists);\r\n    } else {\r\n        listsArray = []\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskListName: data.taskText,\r\n            isNow: data.isNow\r\n        }\r\n        dispatch(addListsTC(uid, newTask))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {\r\n                listsArray.length > 0\r\n                    ? <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 className={css.headerText}>All Tasks</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputForm onSubmit = {onSubmit}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={css.tasks}>\r\n                            {listsArray.length > 1\r\n                                ? listsArray.map(l => <List list={l} changeIsNow = {useChangeIsNow} deleteList={useDeleteList}  uid={uid} />)\r\n                                : <List list={listsArray[0]} changeIsNow = {useChangeIsNow} deleteList={useDeleteList} uid={uid} />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    : <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 >All Tasks: 0</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputForm onSubmit = {onSubmit}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { loginTC } from './../../Redux/authAction';\r\nimport css from './LoginForm.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    login: yup.string().required().email().max('20'),\r\n    password: yup.string().required().min('6').max('20'),\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const localIsAuth = localStorage.getItem('isAuth')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(loginTC(data.login, data.password, data.rememberme));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (localIsAuth === 'true') {\r\n        return <Redirect to={`/taskList`} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n                <h2>Login</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <input className={css.btn} type='submit' value='Login' />\r\n\r\n                <div className={css.linkWrapper}>\r\n                <NavLink className={css.link} to={'/registration'} >Create account?</NavLink>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { regTC } from '../../Redux/authAction';\r\nimport css from './RegForm.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    llogin: yup.string().required(),\r\n    password: yup.string().required(),\r\n    login: yup.string().email(),\r\n    password: yup.string().min('6')\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(regTC(data.login, data.password));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/taskList'} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n                <h2>Create account</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <input className={css.btn} type='submit' value='Create account' />\r\n\r\n                <div className={css.linkWrapper}>\r\n                    <NavLink className={css.link} to={'/'} >Login?</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { HashRouter, Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport store from './Redux/reduxStore';\nimport Header from './Components/Header/Header';\nimport AllTask from './Components/AllTasks/AllTasks';\nimport Lists from './Components/Lists/Lists';\nimport LoginForm from './Components/Login/LoginForm';\nimport RegForm from './Components/Registration/RegForm';\nimport css from './Components/ToDoList.module.css'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwbpTx7d1a0DUP2jHqAaKkZhl7sjW6QPA\",\n  authDomain: \"todolist-3009f.firebaseapp.com\",\n  databaseURL: \"https://todolist-3009f.firebaseio.com\",\n  projectId: \"todolist-3009f\",\n  storageBucket: \"todolist-3009f.appspot.com\",\n  messagingSenderId: \"907810208879\",\n  appId: \"1:907810208879:web:6d6bd6059a7bb44c3ce19a\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nconst ToDoList = () => {\n  return (\n    <div className = {css.todo}>\n      <Header />\n      <Route path='/taskList/:taskId' render={() => <AllTask />} />\n      <Route exact path='/taskList' render={() => <Lists />} />\n      <Route exact path='/' render={() => <LoginForm />} />\n      <Route path='/registration' render={() => <RegForm />} />\n    </div>\n  )\n}\n\nconst ToDoListWithRouter = withRouter(ToDoList);\n\nconst App = () => {\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider firebase={firebase} config={firebaseConfig} dispatch={store.dispatch}>\n        <div className=\"App\">\n          <HashRouter>\n            <ToDoListWithRouter />\n          </HashRouter>\n        </div>\n      </ReactReduxFirebaseProvider>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3uznX\",\"logout\":\"Header_logout__36Qlm\",\"logoutText\":\"Header_logoutText__1wuky\",\"logoutBtn\":\"Header_logoutBtn__dE7fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__K2ZVr\",\"text\":\"InputForm_text__3Icxu\",\"addBtn\":\"InputForm_addBtn__1129H\",\"isNow\":\"InputForm_isNow__1B2Di\"};"],"sourceRoot":""}