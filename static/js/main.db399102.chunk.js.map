{"version":3,"sources":["Components/AllTasks/AllTasks.module.css","Components/ToDoList.module.css","Components/Task/Task.module.css","Components/Lists/Lists.module.css","Components/Login/LoginForm.module.css","Components/List/List.module.css","Components/Registration/RegForm.module.css","Redux/taskAction.js","Redux/taskReducer.js","Redux/listReducer.js","Redux/authAction.js","Redux/authReducer.js","Redux/reduxStore.js","Components/Header/Header.jsx","Components/InputForm/InputForm.jsx","Components/Task/Task.jsx","Components/AllTasks/AllTasks.jsx","Components/InputFormList/InputFormList.jsx","Components/List/List.jsx","Components/Lists/Lists.jsx","Components/Login/LoginForm.jsx","Components/Registration/RegForm.jsx","App.js","serviceWorker.js","index.js","Components/Header/Header.module.css","Components/InputForm/InputForm.module.css","Components/InputFormList/InputFormList.module.css"],"names":["module","exports","setTasks","tasks","type","initialState","SET_TASK","taskReducer","state","action","Object","assign","task","lists","listReducer","setUserData","login","isAuth","userUid","payload","loginTC","password","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","then","user","currentUser","email","uid","checkCurrentUser","SET_USER_DATA","authReducer","middlewares","thunk","withExtraArgument","reducers","combineReducers","taskPage","listPage","authPage","composeEnhancers","window","__INITIAL_STATE__","compose","store","createStore","applyMiddleware","Header","useSelector","useDispatch","className","css","header","headerText","logoutBlock","logout","logoutText","logoutBtn","onClick","signOut","InputForm","props","useForm","register","handleSubmit","setValue","form","onSubmit","data","newTask","taskText","isNow","isDone","useNewTask","text","name","ref","placeholder","for","id","addBtn","value","Task","useState","editMode","setEditMode","taskName","newTaskName","setNewTaskName","style","high","low","done","newName","onChange","target","autoFocus","onBlur","path","location","href","listId","split","length","updates","database","child","update","updateTasksTC","checkBtn","deleteTask","deleteBtn","checkTask","changeTask","AllTasks","useDeleteTask","remove","deleteTasksTC","useCheckTask","checkTasksTC","newKey","push","key","addTasksTC","useEffect","on","elem","response","val","getTasksTC","history","useHistory","tasksArray","values","allTasksWrapper","allTasks","filter","headerLink","to","inputForm","map","t","taskListName","List","list","a","firebase","updateListsTC","link","btns","updateBtn","deleteList","Lists","useNewList","addListsTC","useDeleteList","console","log","deleteListsTC","getListsTC","listsArray","InputFormList","l","showErrors","yup","shape","required","LoginForm","resolver","yupResolver","errors","rememberme","formWrapper","message","checkbox","check","btn","linkWrapper","createUserWithEmailAndPassword","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","ToDoListWithRouter","withRouter","todo","render","exact","RegForm","App","config","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.db399102.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"AllTasks_allTasksWrapper__1UheL\",\"allTasks\":\"AllTasks_allTasks__3jm6-\",\"header\":\"AllTasks_header__YzbYR\",\"headerText\":\"AllTasks_headerText__3foYd\",\"headerLink\":\"AllTasks_headerLink__2oSo_\",\"inputForm\":\"AllTasks_inputForm__1y5iu\",\"tasks\":\"AllTasks_tasks__1glog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDoList_todo__1yxY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__2i8xg\",\"state\":\"Task_state__3ZMHM\",\"deleteBtn\":\"Task_deleteBtn__17owL\",\"checkBtn\":\"Task_checkBtn__2ZdP8\",\"text\":\"Task_text__Xthyq\",\"high\":\"Task_high___AUQL\",\"low\":\"Task_low__29NL3\",\"done\":\"Task_done__1oz61\",\"newName\":\"Task_newName__1piZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTasksWrapper\":\"Lists_allTasksWrapper__2REvb\",\"allTasks\":\"Lists_allTasks__3M8dN\",\"header\":\"Lists_header__1VL64\",\"headerText\":\"Lists_headerText__3WRBx\",\"headerLink\":\"Lists_headerLink__1qIC1\",\"inputForm\":\"Lists_inputForm__2SpqJ\",\"tasks\":\"Lists_tasks__2lp69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__IPpdV\",\"formWrapper\":\"LoginForm_formWrapper__1cpaO\",\"text\":\"LoginForm_text__3Brut\",\"checkbox\":\"LoginForm_checkbox__1mSLW\",\"btn\":\"LoginForm_btn__IM4EY\",\"linkWrapper\":\"LoginForm_linkWrapper__hxDC4\",\"link\":\"LoginForm_link__ZZRpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3-ERM\",\"link\":\"List_link__YbwRo\",\"btns\":\"List_btns__1cdxj\",\"updateBtn\":\"List_updateBtn__8W_Cj\",\"deleteBtn\":\"List_deleteBtn__2zZKX\",\"newName\":\"List_newName__19D8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegForm_form__3CT8P\",\"formWrapper\":\"RegForm_formWrapper__1yt4d\",\"text\":\"RegForm_text__2OYST\",\"checkbox\":\"RegForm_checkbox__aFTbp\",\"btn\":\"RegForm_btn__39lHG\",\"linkWrapper\":\"RegForm_linkWrapper__2iD1h\",\"link\":\"RegForm_link__3uK-D\"};","// consts\r\nexport const SET_TASK = 'SET-TASK';\r\n\r\n// action creators\r\nexport const setTasks = (tasks) => ({ type: SET_TASK, tasks });\r\n\r\n// thunk creators\r\nexport function getTasksTC(uid, listId) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .on('value', (elem) => {\r\n                let response = elem.val();\r\n                let tasks = response\r\n                dispatch(setTasks(tasks))\r\n            })\r\n    }\r\n};\r\n\r\nexport function deleteTasksTC(uid, listId, id) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .child(id)\r\n            .remove()\r\n    }\r\n};\r\n\r\nexport function checkTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        var updates = {};\r\n        let id = task.id\r\n        updates[id] = task;\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};\r\n\r\nexport function addTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        var newKey = getFirebase()\r\n            .database()\r\n            .ref('task')\r\n            .push()\r\n            .key;\r\n\r\n        var updates = {};\r\n        task.id = newKey;\r\n        updates[newKey] = task;\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};\r\n\r\nexport function updateTasksTC(uid, listId, task) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        let id = task.id;\r\n        var updates = {};\r\n        updates[id] = task\r\n        return getFirebase()\r\n            .database()\r\n            .ref(uid)\r\n            .child('taskList')\r\n            .child(listId)\r\n            .child('task')\r\n            .update(updates)\r\n    }\r\n};","//action\r\nimport { SET_TASK, setTasks } from './taskAction'\r\n\r\n// initial state\r\nconst initialState = {\r\n    tasks: setTasks.SET_TASK\r\n};\r\n\r\n// reducer\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASK:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                tasks: action.tasks.task\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default taskReducer;","// API\r\nimport * as firebase from 'firebase';\r\n\r\n// consts\r\nconst SET_LIST = 'SET-LIST';\r\n\r\n// initial state\r\nconst initialState = {\r\n    lists: [{}]\r\n};\r\n\r\n\r\n// reducer\r\nconst listReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LIST:\r\n            // debugger\r\n            return {\r\n                ...state,\r\n                lists: action.lists\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listReducer;\r\n\r\n// action creators\r\nexport const setLists = (lists) => ({ type: SET_LIST, lists });\r\n\r\n// thunk creators\r\nexport const getListsTC = (uid) => async (dispatch) => {\r\n    const db = firebase.database().ref(uid).child('taskList');\r\n    db.on('value', (elem) => {\r\n        \r\n        let response = elem.val();\r\n        // console.log(response)\r\n        dispatch(setLists(response))\r\n    })\r\n};\r\n\r\nexport const deleteListsTC = (uid, id) => async (dispatch) => {\r\n    console.log(id)\r\n    firebase.database().ref(uid).child('taskList').child(id).remove();\r\n    // dispatch(getListsTC());\r\n};\r\n\r\nexport const updateListsTC = (uid, list) => async (dispatch) => {\r\n    // debugger\r\n    let id = list.id;\r\n    var updates = {};\r\n    updates[id] = list\r\n    firebase.database().ref(uid).child('taskList').update(updates);\r\n    // dispatch(getListsTC());\r\n};\r\n\r\nexport const addListsTC = (uid, list) => async (dispatch) => {\r\n    firebase.database().ref(uid).child('taskList');\r\n    var newKey = firebase.database().ref(uid).child('taskList').push().key;\r\n    var updates = {};\r\n    list.id = newKey;\r\n    updates[newKey] = list;\r\n    firebase.database().ref(uid).child('taskList').update(updates);\r\n    \r\n    // dispatch(getListsTC());\r\n}","//consts\r\nexport const SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n//action creators\r\nexport const setUserData = (login, isAuth, userUid) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { login, isAuth, userUid }\r\n});\r\n\r\n//thunk creators\r\nexport function loginTC(login, password) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .signInWithEmailAndPassword(login, password)\r\n            .then(() => {\r\n                dispatch(checkCurrentUser(login))\r\n            })\r\n    }\r\n};\r\n\r\nfunction checkCurrentUser(login) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        var user = getFirebase()\r\n            .auth()\r\n            .currentUser;\r\n        if (user) {\r\n            if (user.email === login) {\r\n                dispatch(setUserData(login, 'true', user.uid))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function logoutTC() {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .signOut()\r\n            .then(function () {\r\n                dispatch(setUserData('', false));\r\n            })\r\n    }\r\n}\r\n\r\nexport function regTC(login, password) {\r\n    return (dispatch, getState, getFirebase) => {\r\n        return getFirebase()\r\n            .auth()\r\n            .createUserWithEmailAndPassword(login, password)\r\n            .then(() => {\r\n                dispatch(loginTC(login, password))\r\n            })\r\n    }\r\n}","//action\r\nimport { SET_USER_DATA, setUserData } from './authAction';\r\n\r\n//initial state\r\nlet initialState = {\r\n    payload: setUserData.SET_USER_DATA,\r\n    login: '',\r\n    isAuth: false,\r\n    userUid: ''\r\n};\r\n\r\n//reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return Object.assign({}, state, {\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n             \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport taskReducer from './taskReducer';\r\nimport listReducer from './listReducer';\r\nimport authReducer from './authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { getFirebase } from 'react-redux-firebase';\r\n\r\nconst middlewares = [\r\n    thunk.withExtraArgument(getFirebase)\r\n];\r\n\r\nlet reducers = combineReducers({\r\n    taskPage: taskReducer,\r\n    listPage: listReducer,\r\n    authPage: authReducer\r\n});\r\n\r\nconst composeEnhancers = window && window.__INITIAL_STATE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\nexport default store;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutTC } from '../../Redux/authAction';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const login = useSelector(state => state.authPage.login);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={css.header}>\r\n            <div className={css.headerText}>\r\n                <h1>ToDoList</h1>\r\n            </div>\r\n            <div className={css.logoutBlock}>\r\n                {isAuth\r\n                    ? <div className={css.logout}>\r\n                        <p className={css.logoutText}>\r\n                            {login}\r\n                        </p>\r\n                        <div>\r\n                            <button className={css.logoutBtn} onClick={() => dispatch(logoutTC())} >LogOut</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : <p></p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputForm.module.css';\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskText: data.taskText,\r\n            isNow: data.isNow,\r\n            isDone: 'false'\r\n        }\r\n        props.useNewTask(newTask);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n            <div className = {css.isNow}>\r\n                <label for='isNow'>Срочность</label>\r\n                <input name='isNow' ref={register} id='isNow' type='checkbox' />\r\n            </div>\r\n\r\n            <input className={css.addBtn} type='submit' value='ADD' />\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTasksTC } from './../../Redux/taskAction';\r\nimport css from './Task.module.css';\r\n\r\nconst Task = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(props.taskName);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        \r\n        let task = props.task\r\n        task.taskText = newTaskName;\r\n        dispatch(updateTasksTC(props.uid, listId, task))\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    }\r\n\r\n    let task = props.task;\r\n\r\n    if (task.isDone === 'false') {\r\n        if (task.isNow) {\r\n            var style = css.high\r\n        } else if (!task.isNow) {\r\n            var style = css.low\r\n        }\r\n    } else {\r\n        var style = css.done\r\n    }\r\n\r\n    function changeTask(task) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        task.isDone = 'true';\r\n        props.checkTask(listId, task)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div className={`${css.task} + ${style}`}>\r\n                    <div className={css.text}>{task.taskText}</div>\r\n                    <button className={css.checkBtn} onClick={() => activateEditMode()}>Rename</button>\r\n                    {task.isDone === 'true'\r\n                        ? <button onClick={() => props.deleteTask(task.id)} className={css.deleteBtn}>Delete</button>\r\n                        : <button onClick={() => changeTask(props.task)} className={css.checkBtn}>Check done</button>\r\n                    }\r\n                </div>\r\n                : <input className={css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} />\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Task","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addTasksTC, checkTasksTC, deleteTasksTC, getTasksTC } from '../../Redux/taskAction';\r\nimport InputForm from '../InputForm/InputForm';\r\nimport Task from './../Task/Task';\r\nimport css from './AllTasks.module.css';\r\n\r\n\r\nconst AllTasks = () => {\r\n\r\n    const tasks = useSelector(state => state.taskPage.tasks);\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const uid = useSelector(state => state.authPage.userUid)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n       dispatch( getTasksTC(uid, listId));\r\n    }, []);\r\n\r\n    function useDeleteTask(id) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(deleteTasksTC(uid, listId, id))\r\n    };\r\n\r\n    function useCheckTask(id, task) {\r\n        dispatch(checkTasksTC(uid, id, task))\r\n    }\r\n\r\n    function useNewTask(task) {\r\n        let path = window.location.href;\r\n        path = path.split('/');\r\n        let listId = path[path.length - 1];\r\n        dispatch(addTasksTC(uid, listId, task))\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    if (!isAuth) {\r\n        history.push('/')\r\n    }\r\n\r\n    let tasksArray = [];\r\n    if (tasks) {\r\n        tasksArray = Object.values(tasks);\r\n    } else {\r\n        tasksArray = []\r\n    };\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {tasksArray.length > 0\r\n                ? <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                    <h2 className={css.headerText}>Active Tasks: {tasksArray.filter(task => task.isDone === 'false').length}\r\n                                <NavLink className={css.headerLink} to={'/taskList'}>back</NavLink> </h2>\r\n\r\n                        <div className={css.inputForm}>\r\n                            <InputForm useNewTask={useNewTask} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={css.tasks}>\r\n                        {tasksArray.map(t => <Task task={t} deleteTask={useDeleteTask} checkTask={useCheckTask} uid = {uid}/>)}\r\n                    </div>\r\n                </div>\r\n                : <div className={css.allTasks}>\r\n                    <div className={css.header}>\r\n                        <h2 className={css.headerText}>Active Tasks: 0<NavLink className={css.headerLink} to={'/taskList'}> back </NavLink>\r\n                        </h2>\r\n                        <div className={css.inputForm}>\r\n                            <InputForm useNewTask={useNewTask} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AllTasks;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport css from './InputFormList.module.css';\r\n\r\nconst InputForm = (props) => {\r\n    const { register, handleSubmit, setValue } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        let newTask = {\r\n            taskListName: data.taskText\r\n        }\r\n        props.useNewTask(newTask);\r\n        setValue('taskText', '')\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input className={css.text} name='taskText'\r\n                ref={register} placeholder={'Enter your task'} />\r\n                \r\n            <input className={css.addBtn} value=\"ADD\" type='submit' />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default InputForm;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { updateListsTC } from './../../Redux/listReducer';\r\nimport css from './List.module.css';\r\n\r\nconst List = (props) => {\r\n\r\n    const taskName = useSelector(state => state.listPage.lists.taskListName)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTaskName, setNewTaskName] = useState(taskName);\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        let list = props.list\r\n        list.taskListName = newTaskName;\r\n        dispatch(updateListsTC(props.uid, list))\r\n    };\r\n\r\n    const onTaskNameChange = ({ target: { value } }) => {\r\n        setNewTaskName(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div  className={`${css.list}`}>\r\n                    <NavLink className={`${css.link}`} to={`/taskList/${props.list.id}`} >\r\n                        <div className={css.text}>{props.list.taskListName}</div>\r\n                    </NavLink>\r\n                    <div className={css.btns}>\r\n                        <button className={css.updateBtn} onClick={() => activateEditMode()}>Rename</button>\r\n                        <button className={css.deleteBtn} onClick={() => props.deleteList(props.list.id)}>Delete</button>\r\n                    </div>\r\n                </div>\r\n                : <input className = {css.newName} onChange={onTaskNameChange} autoFocus={true} value={newTaskName} onBlur={deactivateEditMode} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport InputFormList from '../InputFormList/InputFormList';\r\nimport { addListsTC, deleteListsTC, getListsTC } from './../../Redux/listReducer';\r\nimport List from './../List/List';\r\nimport css from './Lists.module.css';\r\n\r\n\r\nconst Lists = () => {\r\n\r\n    const lists = useSelector(state => state.listPage.lists);\r\n    const uid = useSelector(state => state.authPage.userUid);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getListsTC(uid));\r\n    }, []);\r\n\r\n    function useNewList(list) {\r\n        dispatch(addListsTC(uid, list))\r\n    };\r\n\r\n    function useDeleteList(id) {\r\n        dispatch(deleteListsTC(uid, id))\r\n    }\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n    const history = useHistory();\r\n\r\n    if (!isAuth) {\r\n        history.push('/')\r\n    }\r\n\r\n    let listsArray = [];\r\n    if (lists) {\r\n        listsArray = Object.values(lists);\r\n    } else {\r\n        listsArray = []\r\n    }\r\n\r\n    return (\r\n        <div className={css.allTasksWrapper}>\r\n            {\r\n                listsArray.length > 0\r\n                    ? <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 className={css.headerText}>All Tasks</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputFormList useNewTask={useNewList} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={css.tasks}>\r\n                            {listsArray.length > 1\r\n                                ? listsArray.map(l => <List list={l} deleteList={useDeleteList}  uid={uid} />)\r\n                                : <List list={listsArray[0]} deleteList={useDeleteList} uid={uid} />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    : <div className={css.allTasks}>\r\n                        <div className={css.header}>\r\n                            <h2 >All Tasks: 0</h2>\r\n                            <div className={css.inputForm}>\r\n                                <InputFormList useNewTask={useNewList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { loginTC } from './../../Redux/authAction';\r\nimport css from './LoginForm.module.css';\r\n\r\nconst showErrors = yup.object().shape({\r\n    login: yup.string().required(),\r\n    password: yup.string().required(),\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(loginTC(data.login, data.password, data.rememberme));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={`/taskList`} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n            <h2>Login</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <div className={css.checkbox}>\r\n                    <label for='rememberme'>Remember me</label>\r\n                    <input name='rememberme' ref={register} className={css.check}\r\n                        type='checkbox' id='rememberme' />\r\n                </div>\r\n\r\n\r\n\r\n                <input className={css.btn} type='submit' value='Login' />\r\n            </div>\r\n\r\n\r\n            <div className={css.linkWrapper}>\r\n                <NavLink className={css.link} to={'/registration'} >Create account?</NavLink>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport { regTC } from '../../Redux/authAction';\r\nimport css from './RegForm.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst showErrors = yup.object().shape({\r\n    login: yup.string().required(),\r\n    password: yup.string().required(),\r\n})\r\n\r\nconst LoginForm = () => {\r\n\r\n    const isAuth = useSelector(state => state.authPage.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, errors } = useForm({\r\n        resolver: yupResolver(showErrors)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(regTC(data.login, data.password));\r\n        setValue('login', '');\r\n        setValue('password', '')\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/taskList'} />\r\n    }\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <div className={css.formWrapper}>\r\n                <h2>Create account</h2>\r\n                <input name='login' ref={register} className={css.text} type='text' placeholder='Enter login' />\r\n                <p>{errors.login?.message}</p>\r\n                <input name='password' ref={register} className={css.text} type='password' placeholder='Enter password' />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <input className={css.btn} type='submit' value='Create account' />\r\n\r\n                <div className={css.linkWrapper}>\r\n                    <NavLink className={css.link} to={'/'} >Login?</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { HashRouter, Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport store from './Redux/reduxStore';\nimport Header from './Components/Header/Header';\nimport AllTask from './Components/AllTasks/AllTasks';\nimport Lists from './Components/Lists/Lists';\nimport LoginForm from './Components/Login/LoginForm';\nimport RegForm from './Components/Registration/RegForm';\nimport css from './Components/ToDoList.module.css'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwbpTx7d1a0DUP2jHqAaKkZhl7sjW6QPA\",\n  authDomain: \"todolist-3009f.firebaseapp.com\",\n  databaseURL: \"https://todolist-3009f.firebaseio.com\",\n  projectId: \"todolist-3009f\",\n  storageBucket: \"todolist-3009f.appspot.com\",\n  messagingSenderId: \"907810208879\",\n  appId: \"1:907810208879:web:6d6bd6059a7bb44c3ce19a\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nconst ToDoList = () => {\n  return (\n    <div className = {css.todo}>\n      <Header />\n      <Route path='/taskList/:taskId' render={() => <AllTask />} />\n      <Route exact path='/taskList' render={() => <Lists />} />\n      <Route exact path='/' render={() => <LoginForm />} />\n      <Route path='/registration' render={() => <RegForm />} />\n    </div>\n  )\n}\n\nconst ToDoListWithRouter = withRouter(ToDoList);\n\nconst App = () => {\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider firebase={firebase} config={firebaseConfig} dispatch={store.dispatch}>\n        <div className=\"App\">\n          <HashRouter>\n            <ToDoListWithRouter />\n          </HashRouter>\n        </div>\n      </ReactReduxFirebaseProvider>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3uznX\",\"logout\":\"Header_logout__36Qlm\",\"logoutText\":\"Header_logoutText__1wuky\",\"logoutBtn\":\"Header_logoutBtn__dE7fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__K2ZVr\",\"text\":\"InputForm_text__3Icxu\",\"addBtn\":\"InputForm_addBtn__1129H\",\"isNow\":\"InputForm_isNow__1B2Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputFormList_form__1PVH_\",\"text\":\"InputFormList_text__1KX87\",\"addBtn\":\"InputFormList_addBtn__3w8m6\"};"],"sourceRoot":""}